# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Jean Rohark
# This file is distributed under the same license as the decore Base package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: decore Base \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-11 09:43+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../blog.rst:2
#: ../index.rst:153
msgid "Blog"
msgstr ""

#: ../blog.rst:4
msgid "Hier im Blogbereich werden verschiedene Beiträge zu allgemeinen Themen zu finden sein, die sich nicht primär auf die Entwicklung mit decore Base beziehen. Meistens werden es aber Lösungen sein, die mich inspirieren, Anwendungsfälle mit decore in die Praxis umzusetzen."
msgstr ""

#: ../blog.rst:7
msgid "Powershell"
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:7
msgid "Verteilung von Autodesk-Software mit ODIS-Installer und PowerShell unter Vermeidung des Double-Hop-Problems"
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:9
msgid "Seitdem Autodesk sein Deployment-System auf den ODIS-Installer umgestellt hat, laufen alle Verteilungen, die unbeaufsichtigt über den SYSTEM-Account ausgerollt werden, ohne Erfolgscode endlos weiter."
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:11
msgid "Die genaue Fehlermeldung im ODIS-Log lautet:"
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:17
msgid "Nach einer Weile scheint der Installer-Dienst auch beendet zu werden, sendet aber keinen Exit-Code mehr."
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:19
msgid "Ich habe viele Deployment-Suiten ausprobiert, aber das Resultat ist immer dasselbe, wenn der SYSTEM-Account zum Einsatz kommt."
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:21
msgid "Um das Problem vorübergehend zu lösen, bis Autodesk das Problem erkennt und behebt, habe ich nun Lösungsansätze entwickelt, die mir hier bei der Arbeit Abhilfe verschaffen."
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:23
msgid "Mein geplanter Ansatz war, die Verteilung über PowerShell zu realisieren, aber dabei stieß ich erneut auf eine weitere Hürde, die die Kerberos-Authentifizierung mit sich bringt: das sogenannte Double-Hop-Problem, da meine Softwarepakete in CIFS-Freigaben lagern."
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:25
msgid "Kerberos lässt es nicht zu, dass nach einer Authentifizierung auf einem Remote-PC eine weitere Authentifizierung über diesen Endpunkt zu anderen entfernten Zielen durchgeführt wird. Es gibt also keinen zweiten Hop. Um das Problem zu umgehen, gibt es wenige, aber komplizierte Wege oder einen, bei dem jetzt alle sagen werden: \"Oh mein Gott, tu das nicht\", aber ich hau es einfach mal raus."
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:27
msgid "Die Lösung ist, CredSSP nur temporär als Punkt-zu-Punkt-Verbindung zu nutzen und nach dem Deployment wieder zu entschärfen. Es sollte unter keinen Umständen unternehmensweit erlaubt werden."
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:29
#: ../blog/deploy_autodesk_software_powershell.rst:43
msgid "Important"
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:31
msgid "CredSSP hat keinen Single-Hop-Zwang. Authentifizierungen können in einer CredSSP-Sitzung weiterverwendet werden. Sollte das unternehmensweit und dauerhaft erlaubt werden, kann das zu erheblichen Sicherheitsproblemen führen."
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:33
msgid "Hier nun das Skript für alle, die vor dem selben Problem stehen."
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:35
msgid "Das hier beschriebene Skript ist bewusst flach gehalten, um es verständlich zu machen und den weiteren Ausbau durch Euch so einfach wie möglich zu gestalten."
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:37
#: ../features.rst:5
#: ../index.rst:13
#: ../index.rst:142
#: ../start.rst:27
#: ../start.rst:75
#: ../start.rst:87
#: ../start.rst:111
#: ../start.rst:220
msgid "Note"
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:39
msgid "Bitte beachten Sie, dass in diesem Beispiel CredSSP nur temporär verwendet wird und nach dem Deployment wieder deaktiviert wird. Zudem wird ausschließlich der angegebene Remote-Computer delegiert und nicht das gesamte Netzwerk."
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:41
msgid "Nach gründlicher Validierung hat sich dieser Ansatz als sicherer und einfacher Weg erwiesen, um das gewünschte Ziel zu erreichen."
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:45
msgid "Dieses Skript muss mit administrativen Rechten ausgeführt werden, um die CredSSP-Authentifizierung zu aktivieren und zu deaktivieren."
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:109
msgid "Erklären wir nun die einzelnen Schritte des Skripts:"
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:122
msgid "Das Skript kann entweder mit Parametern aufgerufen werden, oder Sie tragen Ihre spezifischen Werte direkt ein. Die notwendigen Informationen für den Installer und die Argumente finden Sie nach der Image-Erstellung im entsprechenden Installations-Skript. Ein typischer Name für eine Revit-Installation könnte beispielsweise `Install Autodesk Revit 2024.bat` sein."
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:124
msgid "Die Parameter für die Silent-Installation und Deinstallation sind ebenfalls dort hinterlegt. Diese Parameter ermöglichen eine unbeaufsichtigte Installation bzw. Deinstallation der Software, was besonders in großen IT-Umgebungen von Vorteil ist."
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:126
msgid "Für weitere Details und eine ausführliche Anleitung zur Bereitstellung von Autodesk-Software, besuchen Sie bitte den folgenden Artikel:"
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:128
#: ../blog/deploy_autodesk_software_powershell.rst:205
msgid "https://www.autodesk.com/support/download-install/admins/account-deploy/deploy-from-autodesk-account"
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:135
msgid "Um eine PowerShell-Sitzung unter Verwendung von CredSSP zu starten, benötigen wir die Anmeldeinformationen eines Benutzers mit den erforderlichen Rechten zur Durchführung von Installationen. In den meisten Fällen handelt es sich dabei um den Domain-Admin. Ein Dialogfeld wird angezeigt, in dem Sie die Anmeldeinformationen eingeben können."
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:148
msgid "Hier wird CredSSP sowohl auf dem Client als auch auf dem Server aktiviert. Es ist hilfreich, die Begriffe \"Verteiler\" (Client) und \"Empfänger\" (Server) zu verwenden, um die Rollen klarer zu definieren. Der Try-Block umfasst alle potenziell fehleranfälligen Aktionen und kann nach Belieben angepasst werden. Für den Anfang ist diese Struktur einfach und robust."
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:155
msgid "Hier wird eine neue PowerShell-Sitzung mit CredSSP-Authentifizierung erstellt."
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:180
msgid "Hier wird das Skript auf dem Remote-Computer ausgeführt. Der Name, der Installer und die Argumente werden als Parameter übergeben. An dieser Stelle endet der Try-Block."
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:199
msgid "Im Finally-Block wird die PowerShell-Sitzung geschlossen und CredSSP auf dem Server und Client deaktiviert. Der Finally-Block wird immer ausgeführt, unabhängig davon, ob der Try-Block erfolgreich war oder nicht. Bitte beachten Sie, dass das Abfangen von Fehlern auch über einen möglichen Exception-Block erfolgen kann. Dies überlasse ich dem findigen Leser."
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:201
msgid "Dieses Skript dient mir nun selbst als Grundlage für Erweiterungen. Ich werde nun daran arbeiten, ein übergeordnetes Skript zu entwickeln, um die Installationen in großen Mengen zu steuern und zu überwachen."
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:203
msgid "**Quellangaben**"
msgstr ""

#: ../blog/deploy_autodesk_software_powershell.rst:206
msgid "https://learn.microsoft.com/en-us/powershell/scripting/security/remoting/ps-remoting-second-hop?view=powershell-7.4"
msgstr ""

#: ../credits.rst:4
msgid "Danksagung"
msgstr ""

#: ../credits.rst:6
msgid "Integrierte Pakete"
msgstr ""

#: ../credits.rst:7
msgid "Durch die Verbindung einiger wirklich guter Python-Pakete war die Arbeit an decore überhaupt erst möglich. Daher möchte ich mich an dieser Stelle bei den Entwicklern der folgenden Pakete bedanken:"
msgstr ""

#: ../credits.rst:9
msgid "**Peewee** - Ein einfaches, aber leistungsstarkes ORM, das eine flexible Datenbankanbindung für Python bietet. http://docs.peewee-orm.com/en/latest/index.html"
msgstr ""

#: ../credits.rst:10
msgid "**Flask** - Ein Microframework für Python basierend auf Werkzeug, Jinja 2 und guter Absichten. http://flask.pocoo.org/"
msgstr ""

#: ../credits.rst:11
msgid "**Quasar** - Ein Vue.js basiertes Frontend-Framework. https://quasar-framework.org/"
msgstr ""

#: ../credits.rst:12
msgid "**Vue.js** - Ein progressiver, inkrementeller JavaScript-Framework für die Entwicklung von Benutzeroberflächen. https://vuejs.org/"
msgstr ""

#: ../credits.rst:13
msgid "**Cerberus** - Eine Validierungs-Bibliothek für Python-Datenstrukturen. http://docs.python-cerberus.org/en/stable/"
msgstr ""

#: ../credits.rst:14
msgid "**pykeepass** - Eine Bibliothek zum interagieren von KeePass 1.x und 2.x Datenbanken. http://pykeepass.readthedocs.io/en/latest/"
msgstr ""

#: ../credits.rst:16
msgid "Bitte unterstützen Sie die Entwickler dieser großartigen Pakete."
msgstr ""

#: ../credits.rst:19
msgid "Bildquellen"
msgstr ""

#: ../credits.rst:20
msgid "Parallax-Bilder auf der Landing-Page und Menu-Hintergründe | **Bing (Powered by Dall-e)** - https://www.bing.com"
msgstr ""

#: ../credits.rst:21
msgid "Feature Icons | **freepik** - https://www.freepik.com"
msgstr ""

#: ../documentation.rst:2
#: ../documentation_work.rst:2
#: ../index.rst:153
msgid "Dokumentation"
msgstr ""

#: ../documentation.rst:4
msgid "Die Dokumentation ist noch im Aufbau und wird derzeit erstellt. Ich werde vorerst praktische Beispiele erarbeiten, um die Nutzung ordnungsgemäß zu validieren. Bitte haben Sie noch etwas Geduld."
msgstr ""

#: ../documentation/decore.rst:2
msgid "Dekoratoren"
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore:1
msgid "Objekt der Klasse Decore ist die Hauptklasse des Frameworks. Sie ist für die Registrierung der Elemente zuständig und stellt die API zur Verfügung."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.app:1
msgid "Eine Funktion zum eröffnen einer GUI-Dashboard-Anwendung. Sie wird als \"Decorator\" verwendet."
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.BackrefMetaField:0
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.BooleanField:0
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.CharField:0
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.DateField:0
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.DateTimeField:0
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.FloatField:0
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.ForeignKeyField:0
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.IntegerField:0
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.ManyToManyField:0
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.PasswordField:0
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.TextField:0
#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.action:0
#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.app:0
#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.base:0
#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.dialog:0
#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.function:0
#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.hook:0
#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.template:0
#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.view:0
#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.widget:0
msgid "Parameters"
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.app:3
msgid "Der Titel der App."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.base:1
msgid "Eine Funktion zum registrieren einer Basis in der GUI-Dashboard-Anwendung. Sie wird als \"Decorator\" verwendet."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.base:3
msgid "Die Basis ist das Trägerelement für die Ansicht und die Vorlage für die Datenquelle im Frontend."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.base:5
msgid "Das Symbol der Basis."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.base:6
msgid "Der Titel der Basis."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.base:7
msgid "Die Beschreibung der Basis."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.base:8
msgid "Das Datenmodell der Basis."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.view:1
msgid "Eine Funktion zur Registrierung einer Ansicht. Sie wird als \"Decorator\" verwendet."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.view:3
msgid "Eine Ansicht ist ein Container für die Anzeige von Daten."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.view:5
msgid "Die ID des übergeordneten Elements. Nur zu setzen, wenn die Ansicht in einer anderen Basis gerendert werden soll."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.view:6
msgid "Das Symbol der Ansicht."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.view:7
msgid "Der Titel der Ansicht."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.view:8
msgid "Die Beschreibung der Ansicht."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.view:9
msgid "Gibt an wie die Datensätze angezeigt werden. Der Wert ``table`` stellt die Datensätze in einer Tabelle dar."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.view:11
msgid "Die Felder, die in der Ansicht angezeigt werden."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.view:12
msgid "Die Filter, die in der Ansicht angezeigt werden."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.view:13
msgid "Die Abfrage, die in der Ansicht angezeigt wird."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.view:14
msgid "Wählt die Methode wie die Datensätze der View geladen werden. Der Wert ``client`` lädt alle Datensätze auf einmal und überlässt den Seitenaufbau dem Frontend."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.view:16
msgid "Gibt an wieviele Datensätze auf einer Seite der Ansicht angezeigt werden sollen. ``16`` ist die Standardeinstellung."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.dialog:1
msgid "Eine Funktion zur Registrierung eines Dialogs. Sie wird als \"Decorator\" verwendet."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.dialog:3
msgid "Der Dialog ist das Trägerelement für Widgets"
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.dialog:5
msgid "Die ID des übergeordneten Elements. Nur zu setzen, wenn der Dialog in einer Ansicht einer anderen Basis gerendert werden soll."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.dialog:6
msgid "Das Symbol des Dialogs."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.dialog:7
msgid "Der Titel des Dialogs."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.dialog:8
msgid "Die Beschreibung des Dialogs."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.dialog:9
msgid "Gibt an wie der Dialog die Widgets darstellen wird. Der Wert ``standard`` stellt die untergeordneten Widgets und Sub-Widgets untereinander dar."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.dialog:11
msgid "Der Anzeigetyp des Dialogs. Standardwert ist ``draw-half``."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.dialog:13
msgid "Der Aktivatortyp des Dialogs. Über den Wert ``none`` wird der Dialog sofort beim OnLoad Ereignis der View angezeigt. Der Wert ``default`` stellt den Dialog im Top-Menu der View dar. Der Wert ``context`` stellt den Dialog im Kontextmenü eines Items der View dar. Der Wert ``click`` zeigt den Dialog dann an wenn man einen Datensatz anklickt."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.widget:1
msgid "Eine Funktion zur Registrierung eines Widgets. Sie wird als \"Decorator\" verwendet."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.widget:3
msgid "Ein Widget dient zur Darstellung und Interaktion mit dem Datensatz. Es erhält die Daten, die der Dialog-Aktivator vorgibt. Der Wert ``none`` übergibt den letzten Datensatz der Datenbanktabelle. Der Wert ``default`` übergibt einen nur mit Default-Werten gefüllten Datensatz. Beim Wert ``context`` übergibt es den Datensatz, der im Kontextmenü der Ansicht ausgewählt wurde. Und ``click`` übergibt den Datensatz, der angeklickt wurde."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.widget:5
msgid "Widgets, welche aus einer fremden Basis einem Dialog zugeordnet werden, ergänzen die relationalen Felder eines Default-Items der fremden Datenquelle mit den Daten des aktivierten Items. (Der Satz ist Scheiße zu verstehen, aber er trifft genau das, was es tut). In der Sample Anwendung verwende ich das beim Zuweisen von \"Contracts\" zu einer \"Person\"."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.widget:7
msgid "Es gibt aber auch Widgets, die mehrere Datensätze darstellen können, wie im Beispiel davor werden hier auch die Relationen verwendet, um nur Daten abzubilden, die etwas mit dem gewählten Item zu tun haben."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.widget:9
msgid "Die ID des übergeordneten Elements. Nur zu setzen, wenn das Widget in einem Dialog einer anderen Basis gerendert werden soll."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.widget:10
msgid "Das Symbol des Widgets."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.widget:11
msgid "Der Titel des Widgets."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.widget:12
msgid "Die Beschreibung des Widgets."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.widget:13
msgid "Gibt an wie das Widget die Daten darstellen wird. Standardwert ist ``default``."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.widget:15
msgid "Die Felder, die in dem Widget angezeigt werden."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.template:1
msgid "Eine Funktion zur Registrierung einer Vorlage. Sie wird als \"Decorator\" verwendet."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.template:3
msgid "Eine Vorlage ist HTML-Code der im Layout der View oder des Widgets gerendert wird."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.template:5
msgid "Die ID des übergeordneten Elements. Nur zu setzen, wenn die Vorlage in einem Dialog einer anderen Basis gerendert werden soll."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.template:6
msgid "Das Symbol der Vorlage."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.template:7
msgid "Der Titel der Vorlage."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.template:8
msgid "Die Beschreibung der Vorlage."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.template:9
msgid "Der Name der Vorlage."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.hook:1
msgid "Eine Funktion zur Registrierung eines \"Hakens\". Sie wird als \"Decorator\" verwendet."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.hook:3
msgid "Ein Haken ist eine Funktion zum abfangen des Load-Ereignisses der übergeordneten Komponente. Er kann dazu genutzt werden um vor dem Laden einer Komponente Bedingungen im Backend zu prüfen und gegebenenfalls den Pool zu manipulieren oder die Route zu ändern."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.hook:5
msgid "Die ID des übergeordneten Elements. Nur zu setzen, wenn der Haken in einem Dialog einer anderen Basis gerendert werden soll."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.hook:6
msgid "Das Symbol des Hakens."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.hook:7
msgid "Der Titel des Hakens."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.hook:8
msgid "Die Beschreibung des Hakens."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.hook:9
msgid "Der Name des Hakens."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.action:1
msgid "Eine Funktion zur Registrierung einer Aktion. Sie wird als \"Decorator\" verwendet."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.action:3
msgid "Eine Aktion ist die tatsächliche Interaktion zwischen dem Benutzer und dem Backend."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.action:5
msgid "Die ID des übergeordneten Elements. Nur zu setzen, wenn die Aktion in einem Widget einer anderen Basis gerendert werden soll."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.action:6
msgid "Das Symbol der Aktion."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.action:7
msgid "Der Titel der Aktion."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.action:8
msgid "Die Beschreibung der Aktion."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.action:9
msgid "Gibt an was die Aktion kann. Standardwert ist ``standard``."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.action:11
msgid "Gib an, wie die Aktion ausgelöst wird."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.action:13
msgid "Gibt an, ob die Aktion Validierungsfehler zurückgeben kann. Standardwert ist ``True``. (Im Augenblick wirkt sich das nur auf den Typen ``submit`` aus.)"
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.action:21
msgid "Die Aktionen durchlaufen ein Modul, welches die erhaltenen Daten aufbereitet und als Keyword-Parameter an die dekorierte Funktion übergibt. Es ist alles in den ``kwargs`` zu finden und man macht sich diese einfach verfügbar. Der Parameter ``item`` ist ein Beispiel dafür und repräsentiert den vom Frontend zurückgegebenen Datensatz. Um herauszufinden, was alles noch in den ``kwargs`` steckt, bitte den Debugger benutzen."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.function:1
msgid "Eine Funktion zur Registrierung einer Funktion in der übergeordneten Base. Sie wird als \"Decorator\" verwendet."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.function:3
msgid "Eine Funktion wird direkt nach der Zusammenstellung des Metadaten-Pool ausgeführt. Mit Funktionen kann man die Logik erweitern, Dinge vorbereiten oder Hintergrundaufgaben erledigen. Sie agieren als Instanzmethoden der Basis und erhalten damit den objektorientierten Ansatz."
msgstr ""

#: ../../../decore_Base/decore_base/decore.py:docstring of decore_Base.decore_base.decore.Decore.function:5
msgid "Gibt an wie eine Funktion ausgeführt wird. Mit dem Wert ``shot`` wird sie nur einmal ausgeführt. Der Wert ``work`` wird in einem Thread ausgeführt und kann somit Schleifen abarbeiten die niemals enden bis der Main-Thread endet."
msgstr ""

#: ../documentation/fields.rst:2
msgid "Felder"
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.BackrefMetaField:1
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.PasswordField:1
#: ../start.rst:72
#: ../start.rst:92
#: ../start.rst:114
#: ../start.rst:225
msgid "Warning"
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.BackrefMetaField:1
msgid "The BackRefMetaField's name must match the name of the specified backref in the ForeignKey or ManyToMany field in the reference model."
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.BackrefMetaField:3
msgid "The BackRefMetaField is used by the user to represent relationships in the **decore Front** application. For example, it can be assigned to the filter or to a form. It is a MetaField and does not get a column in the database."
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.BackrefMetaField:5
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.BooleanField:6
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.CharField:7
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.DateField:6
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.DateTimeField:6
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.FloatField:6
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.ForeignKeyField:6
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.IntegerField:6
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.ManyToManyField:6
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.PasswordField:8
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.TextField:6
msgid "A human-readable name for the field."
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.BackrefMetaField:6
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.BooleanField:5
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.CharField:6
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.DateField:5
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.DateTimeField:5
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.FloatField:5
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.ForeignKeyField:7
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.IntegerField:5
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.ManyToManyField:7
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.PasswordField:7
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.TextField:5
msgid "Additional text to be displayed in **decore Front**."
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.BackrefMetaField:7
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.ForeignKeyField:8
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.ManyToManyField:8
msgid "A List of type string. Only the speciefied fields will be displayed in the filter. If None, all fields will be displayed."
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.BackrefMetaField:8
msgid "A dictonary containing a query to be used when querying options (e.g. in selection fields in the frontend). The query always refers to the reference model."
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.BooleanField:1
msgid "A field to store boolean values."
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.BooleanField:3
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.CharField:3
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.DateField:3
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.DateTimeField:3
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.FloatField:3
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.ForeignKeyField:5
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.IntegerField:3
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.ManyToManyField:5
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.PasswordField:6
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.TextField:3
msgid "If True, the field is allowed to be null. Defaults to False."
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.BooleanField:4
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.CharField:5
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.DateField:4
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.DateTimeField:4
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.FloatField:4
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.IntegerField:4
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.TextField:4
msgid "The default value for the field. Defaults to None."
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.CharField:1
msgid "A field to store char values."
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.CharField:4
msgid "If True, the field must be unique in database table. Defaults to False."
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.DateField:1
msgid "A field to store date values."
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.DateTimeField:1
msgid "A field to store datetime values."
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.FloatField:1
msgid "A field to store float values."
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.ForeignKeyField:1
msgid "A field to represent a one-to-many relationship between two models."
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.ForeignKeyField:3
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.ManyToManyField:3
msgid "The model to which the relationship is to be established."
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.ForeignKeyField:4
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.ManyToManyField:4
msgid "The name of the field in the reference model that represents the relationship to the model."
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.ForeignKeyField:9
#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.ManyToManyField:9
msgid "A dictonary containing a query to be used when querying choices (e.g. in selection fields in the frontend). The query always refers to the reference model."
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.IntegerField:1
msgid "A field to store integer values."
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.ManyToManyField:1
msgid "A field to represent a many-to-many relationship between two models. It is a MetaField and does not get a column in the database. However, a through model is created by decore Base, which represents the relationship between the two models."
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.PasswordField:2
msgid "The keybase is a KeePass file and should be protected by setting the correct access rights (ACL)."
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.PasswordField:4
msgid "A field to store passwords in the keybase and to use them again."
msgstr ""

#: ../../../decore_Base/decore_base/classes/decore_fields.py:docstring of decore_Base.decore_base.classes.decore_fields.TextField:1
msgid "A field to store text values."
msgstr ""

#: ../documentation_work.rst:3
msgid "Um mit decore Base eine lauffähige GUI-Dashboard-Anwendung zu erstellen, sind vergleichsweise wenige Schritte notwendig. Im Wesentlichen besteht der Aufbau aus der Definition der Meta-Instanzen und der Definition des Datenmodells. Die Metadaten werden vom Interpreter durch Einlesen von dekorierten Funktionen zusammengestellt und als Instanzen im Pool gespeichert."
msgstr ""

#: ../documentation_work.rst:14
msgid "Beschreibung der Meta-Instanzen"
msgstr ""

#: ../documentation_work.rst:15
msgid "Meta-Instanzen entahlten die benötigten Typen und Attribute für die Erstellung der GUI-Elemente. Die Meta-Instanzen werden in der Regel durch dekorierte Funktionen erstellt."
msgstr ""

#: ../documentation_work.rst:18
msgid "App"
msgstr ""

#: ../documentation_work.rst:19
msgid "Die Application-Instanz liefert die Metadaten für den Anwendung. Sie ist die Wurzel für alles kommende und nimmt nur Basen auf. Die App-Instanz wird durch den \"Decorator\" :meth:`app() <decore_Base.decore_base.decore.Decore.app>` erstellt."
msgstr ""

#: ../documentation_work.rst:22
#: ../start.rst:96
msgid "Base"
msgstr ""

#: ../documentation_work.rst:23
msgid "Die Base-Instanz liefert die Metadaten für die Basis. Sie ist das Trägerelement für die Ansichten. Die Base-Instanz wird durch den \"Decorator\" :meth:`base() <decore_Base.decore_base.decore.Decore.base>` erstellt."
msgstr ""

#: ../documentation_work.rst:27
#: ../documentation_work.rst:35
#: ../documentation_work.rst:43
#: ../documentation_work.rst:50
#: ../documentation_work.rst:57
#: ../documentation_work.rst:64
msgid "**Darstellung im Frontend**"
msgstr ""

#: ../documentation_work.rst:26
msgid "Die Basis ist im Grunde die freie Fläche die für die Ansichten zur Verfügung steht."
msgstr ""

#: ../documentation_work.rst:27
msgid "In der Navigation wird sie direkt unter Wurzel gelistet sobald sie mehr als eine Ansicht erhält."
msgstr ""

#: ../documentation_work.rst:30
#: ../start.rst:124
msgid "View"
msgstr ""

#: ../documentation_work.rst:31
msgid "Die View-Instanz liefert die Metadaten für die Ansicht. Ihr können Aktionen und Dialoge untergeordnet werden. Die View-Instanz wird durch den \"Decorator\" :meth:`view() <decore_Base.decore_base.decore.Decore.view>` erstellt."
msgstr ""

#: ../documentation_work.rst:34
msgid "Die Ansicht wird in der Navigation unter der Basis gelistet."
msgstr ""

#: ../documentation_work.rst:35
msgid "Die Ansicht wird im Ansichtsbereich der Basis gerendert."
msgstr ""

#: ../documentation_work.rst:38
#: ../start.rst:145
msgid "Dialog"
msgstr ""

#: ../documentation_work.rst:39
msgid "Die Dialog-Instanz liefert die Metadaten für den Dialog. Ihr können weitere Dialoge untergeordnet werden die dann in Tabs dargetellt werden. Hauptsächlich dienen diese aber zum tragen der Widgets. Die Dialog-Instanz wird durch den \"Decorator\" :meth:`dialog() <decore_Base.decore_base.decore.Decore.dialog>` erstellt."
msgstr ""

#: ../documentation_work.rst:42
msgid "Der Dialog kann in unterschiedlichen Display-Modis dargestellt werden. Zum Beispiel als Side-Drawer oder als modales Fenster."
msgstr ""

#: ../documentation_work.rst:43
msgid "Dieser wird durch die mit dem Aktivator-Attribut bestimmten Postionen oder Ereignisse aufgerufen."
msgstr ""

#: ../documentation_work.rst:46
#: ../start.rst:168
msgid "Widget"
msgstr ""

#: ../documentation_work.rst:47
msgid "Die Widget-Instanz liefert die Metadaten für das Widget. Ihr können weitere Widgets untergeordnet werden die dann gestapelt dargetellt werden. Ein Widget wird für die Manipulation des Datensatzes oder Datensätze benötigt. Die Widget-Instanz wird durch den \"Decorator\" :meth:`widget() <decore_Base.decore_base.decore.Decore.widget>` erstellt."
msgstr ""

#: ../documentation_work.rst:50
msgid "Das Widget wird im Content-Bereich des Dialoges dargestellt."
msgstr ""

#: ../documentation_work.rst:53
#: ../start.rst:191
msgid "Action"
msgstr ""

#: ../documentation_work.rst:54
msgid "Die Action-Instanz liefert die Metadaten für die Aktion. Sie ist das Schlußlicht in der Prozesskette der Meta-Abarbeitung und dient zum übermitteln der Manipulationen und der Ausführung von Aktionen im Backend. Die Action-Instanz wird durch den \"Decorator\" :meth:`action() <decore_Base.decore_base.decore.Decore.action>` erstellt."
msgstr ""

#: ../documentation_work.rst:57
msgid "Aktionen können durch das Aktivator-Attribut an unterschiedlichen Stellen im Frontend positioniert werden, haben aber keine tatächliche Darstellung sondern nur Schaltflächen- oder Ereignisgesteuerte Trigger."
msgstr ""

#: ../documentation_work.rst:60
msgid "Function"
msgstr ""

#: ../documentation_work.rst:61
msgid "Die Function-Instanz liefert die Metadaten für Funktionen die nach dem Init des Pools direkt in der Base als Instanz-Methoden ausgeführt werden. Die Function-Instanz wird durch den \"Decorator\" :meth:`function() <decore_Base.decore_base.decore.Decore.function>` erstellt."
msgstr ""

#: ../documentation_work.rst:64
msgid "Funktionen werden nicht im Frontend dargestellt oder aufgearbeitet."
msgstr ""

#: ../documentation_work.rst:67
msgid "Abarbeitungsreihenfolge im Frontend"
msgstr ""

#: ../documentation_work.rst:68
msgid "Nach dem Öffnen einer Anwendung, dem Anlegen der Base und dem Anlegen weiterer Childs laufen alle Pfade auf die Action zu, die schließlich wieder mit dem Backend kommuniziert, um die Manipulation der Daten zu ermöglichen. Nicht jedes Komponentenobjekt kann einem anderen beliebig zugeordnet werden. Das Frontend arbeitet die einzelnen Objekte nur in einer festen Reihenfolge ab."
msgstr ""

#: ../documentation_work.rst:70
msgid "Diese Übersicht stellt den Prozess dieser Abarbeitung dar."
msgstr ""

#: ../documentation_work.rst:96
msgid "Relationale Datenverarbeitung im Widget"
msgstr ""

#: ../documentation_work.rst:97
msgid "Die Datenverarbeitung und Datensatzgenerierung in den Widgets ist ein wichtiger Bestandteil der Anwendung und wird hier als Relationale-Datenverarbeitung bezeichnet. Diese Generierung des bearbeitbaren Datensatzes, wird erstens durch den Aktivator und zweitens durch die Datenquelle der Ansicht in Beziehung zur Datenquelle des Widgets gesteuert. Damit wird ermöglicht, einen Dialog mit weiter im Kontext der eigentlichen Selektion zu erweitern und detailreicher zu gestalten."
msgstr ""

#: ../documentation_work.rst:99
msgid "Folgender Chart beschreibt diesen Prozess."
msgstr ""

#: ../documentation_work.rst:116
msgid "Legende:"
msgstr ""

#: ../documentation_work.rst:107
msgid "**Item**"
msgstr ""

#: ../documentation_work.rst:103
msgid "empty = ein leerer Datensatz wird generiert. (keine Default-Werte)."
msgstr ""

#: ../documentation_work.rst:104
msgid "first = der erste Datensatz der Widget-Quelle wird als Datensatz geladen."
msgstr ""

#: ../documentation_work.rst:105
msgid "last = der letzte Datensatz der Widget-Quelle wird als Datensatz geladen."
msgstr ""

#: ../documentation_work.rst:106
msgid "default = ein neuer Datensatz mit Default-Werten der Widget-Quelle wird als Datensatz geladen."
msgstr ""

#: ../documentation_work.rst:107
msgid "item_by_id = ein Datensatz mit einer definierten ID aus der Widget-Quelle wird als Datensatz geladen."
msgstr ""

#: ../documentation_work.rst:111
msgid "**Query**"
msgstr ""

#: ../documentation_work.rst:110
msgid "True = Alle vorkommenden Backref-Namen und die ID des selektierten Datensatzes der Ansichts-Quelle wird genutzt, um die Query des Widgets zu erweitern."
msgstr ""

#: ../documentation_work.rst:111
msgid "False = Die ID des selektierten Datensatzes wird nicht als Query-Attribut für den Datenabruf verwendet."
msgstr ""

#: ../documentation_work.rst:116
msgid "**Extend**"
msgstr ""

#: ../documentation_work.rst:114
msgid "True = automatische Befüllung der relationalen Felder des Ziel-Datensatzes, mit dem Ansichts-Datensatz. Zum Beispiel: Ein ForeignKey-Feld des Ziel-Datanstaz wird mit dem Ansichst-Datenstaz befüllt."
msgstr ""

#: ../documentation_work.rst:115
msgid "False = keine automatische Befüllung des Datensatzes."
msgstr ""

#: ../features.rst:2
#: ../index.rst:153
msgid "Besonderheiten"
msgstr ""

#: ../features.rst:3
msgid "decore Base soll als universelles und flexibles Werkzeug in der Anwendungsentwicklung dienen. Unser Vorhaben ist es, alle Phasen der Softwareentwicklung zu unterstützen und die enthaltenen und kommenden Features auch auf diese auszulegen."
msgstr ""

#: ../features.rst:6
msgid "Die mit ** gekennzeichneten Features sind noch nicht implementiert, sind aber in direkter Bearbeitung."
msgstr ""

#: ../features.rst:9
#: ../index.rst:23
msgid "Kern & Konzept"
msgstr ""

#: ../features.rst:10
msgid "Einfach und schnelle Umsetzung deiner Ideen und Vorstellungen, da die Kernelemente einer professionellen Dashboard-Anwendung schon integriert sind."
msgstr ""

#: ../features.rst:11
msgid "Automatische relationale Aufarbeitung der darstellbaren Daten im Frontend."
msgstr ""

#: ../features.rst:12
msgid "Fortschrittsübermittlung bei Aktionen an das Frontend."
msgstr ""

#: ../features.rst:15
#: ../index.rst:41
msgid "Entwicklung & Erweiterung"
msgstr ""

#: ../features.rst:17
msgid "Integriertes Datenbank-ORM (sqlite) und einfache Datensatzereugung mit angepasster und vereinfachter Peewee-Integration."
msgstr ""

#: ../features.rst:18
msgid "Relationale Datenbank-Abfragen mit einer eigenen ``query`` Methode im Model."
msgstr ""

#: ../features.rst:19
msgid "Erhaltung des Objekt-Orientierten Programmierstils in den Basisklassen, durch Aktionsufruf als Instanzmethoden."
msgstr ""

#: ../features.rst:20
msgid "Sofort verwendbare Daten-Instanzen im Frontend, nach dem Aktionaufruf im Backend."
msgstr ""

#: ../features.rst:23
#: ../index.rst:58
msgid "Anpassung & Design"
msgstr ""

#: ../features.rst:25
msgid "Wandelbare Seitenansichten durch die Möglichkkeit HTML Templates zu verwenden**."
msgstr ""

#: ../features.rst:26
msgid "Anpassung der Darstellungen und Reihenfolgen im Layout"
msgstr ""

#: ../features.rst:29
#: ../index.rst:75
msgid "Test & Stabilität"
msgstr ""

#: ../features.rst:31
msgid "Integrierte Standard-Validierung auf Basis der Feldattribute, beim Speichern eines Datensatzes."
msgstr ""

#: ../features.rst:32
msgid "Erweiterbare und benutzerdefinierte Validierungsregeln auf Basis von Cerberus-Schemata**."
msgstr ""

#: ../features.rst:33
msgid "Integriete Log, Test und Messfunktionialität**."
msgstr ""

#: ../features.rst:36
#: ../index.rst:92
msgid "Sicherheit & Compliance"
msgstr ""

#: ../features.rst:38
msgid "Integriertes Sitzungssystem mit vorkonfektionierter Benutzer- und Rechteverwaltung."
msgstr ""

#: ../features.rst:39
msgid "Sichere Übertragung von Backend zum Frontend**."
msgstr ""

#: ../features.rst:40
msgid "Zentrale dedizierte Ablage von wiederverwendbaren oder versalzenen Kennwörter mit integriertem Sicherheitsleitfaden**."
msgstr ""

#: ../features.rst:45
#: ../index.rst:109
msgid "Bereitstellung & Veröffentlichung"
msgstr ""

#: ../features.rst:47
msgid "Der Standard-Veröffentlichungstyp während der Entwicklung, beim Debuggen und nach Fertigstellung ist die Browseranwendung."
msgstr ""

#: ../features.rst:48
msgid "Möglichkeit der Erstellung von Standalone-Desktop-Anwendungen für Windows mit Electron**."
msgstr ""

#: ../features.rst:51
#: ../index.rst:126
msgid "Marketing & Monetarisierung"
msgstr ""

#: ../features.rst:53
msgid "Die Vielfalt von Anwendungsarten und -zwecken, die mit decore Base umgesetzt werden können, eröffnen ebenso zahlreiche Möglichkeiten zur Monetarisierung."
msgstr ""

#: ../features.rst:54
msgid "Subtile und nahtlose Möglichkeit Werbung zu schalten**."
msgstr ""

#: ../howtos.rst:2
#: ../index.rst:153
msgid "Anleitungen"
msgstr ""

#: ../impressum.rst:4
msgid "Impressum"
msgstr ""

#: ../impressum.rst:6
#: ../policy.rst:6
msgid "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus. Suspendisse lectus tortor, dignissim sit amet, adipiscing nec, ultricies sed, dolor. Cras elementum ultrices diam. Maecenas ligula massa, varius a, semper congue, euismod non, mi. Proin porttitor, orci nec nonummy molestie, enim est eleifend mi, non fermentum diam nisl sit amet erat. Duis semper. Duis arcu massa, scelerisque vitae, consequat in, pretium a, enim. Pellentesque congue. Ut in risus volutpat libero pharetra tempor. Cras vestibulum bibendum augue. Praesent egestas leo in pede. Praesent blandit odio eu enim. Pellentesque sed dui ut augue blandit sodales. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Aliquam nibh. Mauris ac mauris sed pede pellentesque fermentum. Maecenas adipiscing ante non diam sodales hendrerit."
msgstr ""

#: ../index.rst:153
#: ../start.rst:6
msgid "Erste Schritte"
msgstr ""

#: ../index.rst:-1
msgid "decore Base | UI fastly"
msgstr ""

#: ../index.rst:-1
msgid "Build fast gui dashboard applications with Python that give your ideas more freedom."
msgstr ""

#: ../index.rst:-1
msgid "python gui, decore, python datenbank, python dashboard, python orm, python ui, dashboard erstellung, python anwendung, ui framework, ui werkzeugkasten"
msgstr ""

#: ../index.rst:-1
msgid "index, follow"
msgstr ""

#: ../index.rst:10
msgid "Entfesseln Sie Ihre Ideen"
msgstr ""

#: ../index.rst:11
msgid "decore Base ist ein out-of-the-box \"Python to Vue.js\" Datenanwendungs-Dashboard, das Ihnen hilft, in wenigen einfachen Schritten von der Idee zur Ansicht zu gelangen. Es richtet sich an diejenigen, die sich auf die Ergebnisse ihrer Algorithmen konzentrieren wollen, wissenschaftliche Arbeit leisten oder Lehr- und Lernfunktionen ausführen wollen."
msgstr ""

#: ../index.rst:14
msgid "**decore Base ist derzeit in Arbeit, nur lokal bereitstellbar, nur für Windows verfügbar und noch nicht produktionsbereit**."
msgstr ""

#: ../index.rst:16
msgid "Die empfohlene IDE ist Visual Studio Code und alle Kommentare, Beschreibungen und Dokumentationen beziehen sich vorerst auch nur auf vscode."
msgstr ""

#: ../index.rst:19
msgid "Entwicklungsphasen & Vorteile"
msgstr ""

#: ../index.rst:20
msgid "decore Base wurde entworfen um den Entwicklungsprozess deiner Anwendung in seinen verschiedenen Phasen optimal zu unterstützen."
msgstr ""

#: ../index.rst:37
msgid "Um deinen Ideen maximale Freiheit zu geben, ist decore Base im ersten Schritt praktisch sofort einsatzbereit. Du musst dich nicht um die GUI, Datenbankfunktionalitäten, Sicherheitsaspekte oder viele andere Details kümmern. Feinere Anpassungen kannst du im nächsten Schritt entsprechend deinen Anforderungen vornehmen. Konzentriere dich vollständig auf deine Ideen und die Umsetzung deiner Algorithmen."
msgstr ""

#: ../index.rst:55
msgid "Programmiere deine Anwendung im objektorientierten Stil, denn Benutzer-Aktionen aus dem Frontend werden in deinen Basisinstanzen ausgeführt. Dekoriere einfach Python-Funktionen mit einer klaren Syntax und ermögliche so das organische Wachsen deiner GUI-Anwendung. Erweitere deine Anwendung um neue Funktionen und schöpfe dabei aus dem vollen Potenzial von Python und seinen Bibliotheken."
msgstr ""

#: ../index.rst:72
msgid "Entdecke mühelos und zügig den grundlegenden UI-Stil und passe ihn anschließend ganz nach deinen Anforderungen an. Integriere zusätzlich Template-Code**, um sicherzustellen, dass deine Anwendung nicht nur Daten verarbeitet, sondern auch ein individuelles Erscheinungsbild annimmt. Verleihe deiner Benutzeroberfläche deinen persönlichen Stil mithilfe eigener Sheets**."
msgstr ""

#: ../index.rst:89
msgid "Gewährleiste die Stabilität und Qualität deiner Anwendung durch eine sorgfältige Überprüfung ihrer Funktionalitäten mithilfe eingebauter Testmethoden**. Diese Tests ermöglichen es, die erwarteten Ergebnisse sicherzustellen und die Performance der Anwendung zu optimieren."
msgstr ""

#: ../index.rst:106
msgid "Nutze das eingebaute Sitzungsmanagement und übertrage Daten verschlüsselt** in deine Anwendung. Implementiere eigene Modelle für die Erfassung sensibler und persönlicher Benutzerdaten. Setze die integrierte Benutzerverwaltung** ein, um Rollen und Besitzrechte zu verwalten."
msgstr ""

#: ../index.rst:123
msgid "decore Base wird auch in dieser Entwicklungsphase künftig unterstützende Funktionen bieten. Bald werden Features wie die Electron-Integration** verfügbar sein, mit der du deine Anwendung ganz einfach als Desktop-App veröffentlichen kannst."
msgstr ""

#: ../index.rst:140
msgid "Gewährleiste die Sichtbarkeit und Auffindbarkeit deiner Anwendung durch ein SEO**-freundliches Frontend. Baldige Implemetierungen berücksichtigen subtile und benutzerfreundliche Werbemöglichkeiten**, die nahtlos in das Anwendererlebnis integriert sind und die Vielzahl der Anwendungsmöglichkeiten die decore Base mitbringt, bieten auch viele Möglichkeiten der Monetarisierung**."
msgstr ""

#: ../index.rst:143
msgid "** Einige der hier genannten Funktionen sind derzeit noch in direkter Entwicklung und werden in Kürze verfügbar sein."
msgstr ""

#: ../index.rst:146
msgid "Beteiligung & Unterstützung"
msgstr ""

#: ../index.rst:147
msgid "Die größte Hilfe, die wir im Moment bekommen können, ist, wenn Sie einen Blick auf das Projekt werfen und uns sagen, was Sie davon halten. Wir sind für jede Kritik dankbar."
msgstr ""

#: ../index.rst:149
msgid "Sollte bei Entwickeln etwas nicht wie erwartet funktionieren oder Unklarheiten in der Dokumentation auftauchen, lassen Sie es uns bitte wissen."
msgstr ""

#: ../index.rst:151
msgid "Bitte benutzen Sie dazu den Problembereich im Repository. `<https://github.com/KemoPanzah/decore_Base/issues>`_"
msgstr ""

#: ../policy.rst:4
msgid "Datenschutzerklärung"
msgstr ""

#: ../sample_remove.rst:2
msgid "Beispielanwendung"
msgstr ""

#: ../sample_remove.rst:3
msgid "Um besser zu verstehen, wie decore Base funktioniert, ist es am besten, sich die Beispielanwendung anzusehen."
msgstr ""

#: ../sample_remove.rst:5
msgid "https://github.com/KemoPanzah/decore_Sample"
msgstr ""

#: ../start.rst:-1
msgid "create dashbord with python fastly"
msgstr ""

#: ../start.rst:-1
msgid "python gui, decore, python database, python dashboard, python orm, python ui, dashboard creation, python application, ui framework, ui toolkit"
msgstr ""

#: ../start.rst:7
msgid "Um die schnelle GUI-Dashboard-Erstellung, mit decore Base in Python, zu veranschaulichen werden wir nun gemeinsam eine kleine UI in Form einer Webanwendung erstellen."
msgstr ""

#: ../start.rst:9
msgid "Die dekorierten Funktionen dienen, in allererster Linie, der Erstellung von Metainformationen für die spätere Auswertung im Frontend der Anwendung und sind nichts, wovor man sich fürchten muss."
msgstr ""

#: ../start.rst:11
msgid "*Es ist wirklich einfach, bitte folgen Sie mir!*"
msgstr ""

#: ../start.rst:14
msgid "Installation"
msgstr ""

#: ../start.rst:15
msgid "Erstellen Sie zunächst ein leeres Python-Projekt in Ihrem gewünschten Verzeichnis."
msgstr ""

#: ../start.rst:17
msgid "Um decore Base zu installieren, führen wir den folgenden Befehl im Stammverzeichnis des Projekts aus. Verwenden wir das Terminal in vscode."
msgstr ""

#: ../start.rst:23
msgid "Dies erfordert eine aktivierte Python-Umgebung! Um mehr darüber zu erfahren, besuchen Sie `Python-Umgebungen in VS Code <https://code.visualstudio.com/docs/python/environments>`_."
msgstr ""

#: ../start.rst:26
msgid "Vorbereitung"
msgstr ""

#: ../start.rst:28
msgid "Um für unsere zukünftige Python GUI-Dashboard-Anwendung alles nötige an Pfaden und Einstellungen zu erhalten, müssen wir noch die Vorbereitung durchführen."
msgstr ""

#: ../start.rst:30
msgid "Erstellen wir nun eine neue Datei mit dem Namen **app.py** im Hauptverzeichnis des Projekts."
msgstr ""

#: ../start.rst:32
msgid "Um decore zu verwenden, importieren wir es zunächst in das Modul **app.py**."
msgstr ""

#: ../start.rst:38
msgid "Dann verwenden wir den Befehl ``prepare``, um alle erforderlichen Hilfsdateien im Stammverzeichnis des Projekts zu erstellen."
msgstr ""

#: ../start.rst:40
msgid "Um nun die Anwendung tatsächlich vorzubereiten, führen wir den Befehl ``python app.py --prepare`` im Terminal aus. Der Pfad muss im Hauptverzeichnis des Projekts liegen, also dort wo sich die **app.py** befindet."
msgstr ""

#: ../start.rst:43
msgid "Verwendung"
msgstr ""

#: ../start.rst:44
msgid "Damit der Python-Interpreter die zukünftigen Basisklassen verarbeiten kann, fügen wir den folgenden Import hinzu."
msgstr ""

#: ../start.rst:50
msgid "Normalerweise enthält ein Python-Hauptmodul eine Abfrage, die prüft, ob es das Hauptmodul ist, so dass wir anschließend die Funktion ``main`` aufrufen können."
msgstr ""

#: ../start.rst:52
msgid "Als nächstes erstellen wir eine Zeile ``if __name__ == '__main__':`` in der **app.py** Datei."
msgstr ""

#: ../start.rst:54
msgid "Um eine neue \"decore\" Anwendungsinstanz zu erstellen, benutzen wir eine mit ``@decore.app`` dekorierte ``main()`` Funktion in der **app.py** Datei, direkt unter der Zeile: ``if __name__ == '__main__':``."
msgstr ""

#: ../start.rst:67
msgid "Model"
msgstr ""

#: ../start.rst:68
msgid "In einem Modell legen wir die Datenfelder fest, in einer Datenbanktabelle repräsentiert werden. Es dient als Schnittstelle zu den Datenbanktreibern wie SQLite, MySQL, PostgreSQL, etc."
msgstr ""

#: ../start.rst:70
msgid "Wir erstellen nun die Datei first_model.py im Verzeichnis **models** und fügen den folgenden Code ein:"
msgstr ""

#: ../start.rst:73
msgid "Es muss nicht für jede Basis ein Modell angelegt werden aber es muss jedes zu verwenden Modell eine Basis haben, die über die Datei **__init__.py**, importiert werden muss. Nur so werden Rellationen zwischen den Modellen auch im Frontend ausgewertet und dargestellt."
msgstr ""

#: ../start.rst:76
msgid "Um mögliche zirkuläre Importe zu vermeiden, legen wir die Modellklassen in einem eigenen Verzeichnis **models** in unserem Projektstammverzeichnis an. Das Verzeichnis **models** wurde durch den zuvor ausgeführten Befehl ``python app.py --prepare`` erstellt."
msgstr ""

#: ../start.rst:88
msgid "In dem hier gezeigten Beispiel importieren wir aus der **uniform library** die Klasse Conform_model und erweitern sie um die Felder Vorname und Nachname."
msgstr ""

#: ../start.rst:90
msgid "Die Modelle in **decore Base** basieren auf dem großartigen Peewee ORM. Um mehr über Peewee zu erfahren, besuchen Sie `Peewee ORM <http://docs.peewee-orm.com/en/latest/>`_."
msgstr ""

#: ../start.rst:93
msgid "Beim Importieren ist zu beachten, dass wir alles (*) aus dem conform_model Namespace importieren, um auch die Feldklassen zu erhalten."
msgstr ""

#: ../start.rst:97
msgid "Die Basisklassen dienen der decore-Anwendung als Trägerelement für die View-Komponenten, pflegen das Datenmodell ein und gelten damit auch als Datenquelle für die Auswertung im Frontend des Dashboards."
msgstr ""

#: ../start.rst:99
msgid "Nun müssen wir ein neues Python-Modul erstellen, das z.B. eine Basisklasse enthält: **first_base.py**, im Verzeichnis **bases** in unserem Projektstammverzeichnis. Das Verzeichnis **bases** wurde durch den zuvor ausgeführten Befehl ``python app.py --prepare`` miterzeugt."
msgstr ""

#: ../start.rst:112
msgid "Um das zuvor erstellte Modell zu verwenden, importieren wir es in die Base-Klasse und übergeben es an den Parameter ``model``."
msgstr ""

#: ../start.rst:115
msgid "In order for the Python interpreter to be able to process the base classes, we have to import them into the __init__.py file in the **bases** directory. The order of the individual imports also determines the order in **decore Front**."
msgstr ""

#: ../start.rst:117
msgid "We edit the **__init__.py** file and insert the following code:"
msgstr ""

#: ../start.rst:125
msgid "Views werden von der decore-Anwendung verwendet, um die Datensätze im Frontend der Webanwendung zu präsentieren."
msgstr ""

#: ../start.rst:127
msgid "Mit dem View-Decorator können wir nun eine Ansichts-Komponente erstellen und sie, unter der zuvor erstellten Basisklasse, einhängen."
msgstr ""

#: ../start.rst:129
msgid "Wir bearbeiten nun die Datei **first_base.py** erneut und erweitern den Code wie folgt:"
msgstr ""

#: ../start.rst:146
msgid "Dialoge sind die unterstützenden Elemente für Widgets im Frontend der Webanwendung. Sie können Ansichten aber auch untergeordneten Widgets hinzugefügt werden und steuern die Sichtbarkeit und den Anzeigestil von Kindelementen. Dialoge erhalten auch die Kontrolle über die Sendefunktionen der Widgets."
msgstr ""

#: ../start.rst:148
msgid "In unserem Fall erstellen wir einen Dialog, um eine neue Person mit Vornamen und Nachnamen anzulegen."
msgstr ""

#: ../start.rst:150
msgid "Hier gehen wir ... wieder die Datei **first_base.py** und erweitern den Code wie folgt:"
msgstr ""

#: ../start.rst:169
msgid "Widgets sind Komponenten, mit denen wir Interaktionen mit dem einzelnen Datensatz durchführen können. Sie können nur zu Dialogen hinzugefügt werden und sind stapelbar."
msgstr ""

#: ../start.rst:171
msgid "Was wir jetzt brauchen, ist ein Eingabeformular, um die Daten für die neue Person einzugeben."
msgstr ""

#: ../start.rst:192
msgid "Actions sind Methoden, mit das Frontend mit **decore Base** kommunizieren kann. Sie können zu View und Widgets hinzugefügt werden und sind die einzigen echten Klassenmethoden und werden direkt in der Basis aufgerufen."
msgstr ""

#: ../start.rst:194
msgid "Wir brauchen nun eine Aktion, um die Daten der neuen Person zu speichern und erweitern den Code in **first_base.py** wie folgt:"
msgstr ""

#: ../start.rst:221
msgid "Um einen Datensatz mit decore Base zu erstellen, müssen wir eine Instanz des Modells erstellen. In unserem Fall **First_model**. Die Instanz wird mit den Daten aus dem Formular gefüllt und dann gespeichert."
msgstr ""

#: ../start.rst:223
msgid "Die ID, in Form einer UUID im Textformat, wird automatisch generiert und muss nicht gesondert angegeben werden."
msgstr ""

#: ../start.rst:226
msgid "Das Feld **titel** muss bei jeder Datensatzerstellung verwendet werden. Andernfalls wird das Element die Validierung nicht bestehen. Es sollte ausserdem immer eindeutig sein, also keine gleichen Titel in der Datenbank geben."
msgstr ""

#: ../start.rst:229
msgid "Ausführung, Entwicklung und Erstellung"
msgstr ""

#: ../start.rst:231
msgid "Ausführung"
msgstr ""

#: ../start.rst:232
msgid "Um Ihre Anwendung zu starten, führen Sie ``python app.py`` in Ihrem Projekt-Stammverzeichnis aus. Verwenden Sie das Terminal in vscode."
msgstr ""

#: ../start.rst:234
#: ../start.rst:240
msgid "Öffnen Sie den Browser und geben Sie ``http://localhost:5555`` ein."
msgstr ""

#: ../start.rst:237
msgid "Entwicklung"
msgstr ""

#: ../start.rst:238
msgid "Um Ihre Anwendung zu entwickeln, verwenden Sie Ihren Debugger mit dem Profil ``[dev] decore base development`` in vscode."
msgstr ""

#: ../start.rst:243
msgid "Erstellung"
msgstr ""

#: ../start.rst:244
msgid "Um Ihre Anwendung zu erstellen, führen Sie ``python app.py --build`` in Ihrem Projekt-Stammverzeichnis aus. Verwenden Sie das Terminal in vscode."
msgstr ""
