# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Jean Rohark
# This file is distributed under the same license as the decore Base
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: decore Base\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-01 20:08+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: en <LL@li.org>\n"
"Language: en\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Generated-By: Babel 2.12.1\n"

#: ../docs/decore.rst:2
msgid "Decorators"
msgstr "Decorators"

#: decore_Base.decore_base.decore.Decore:1 of
msgid ""
"Diese Klasse stellt alle notwendigen Funktionen zur Verfügung, um eine "
"decore Anwendung zu definieren. Sie hält auch die Routen für die "
"Kommunikation mit dem Frontend."
msgstr ""
"This class provides all the necessary functions to define a decore "
"application. It also holds the routes for communication with the frontend."

#: decore_Base.decore_base.decore.Decore.app:1 of
msgid ""
"Eine Funktion zum eröffnen einer GUI-Dashboard-Anwendung. Sie wird als "
"\"Decorator\" verwendet."
msgstr ""
"A function to open a GUI dashboard application. It is used as a "
"\"decorator\"."

#: decore_Base.decore_base.classes.decore_fields.BackrefMetaField
#: decore_Base.decore_base.classes.decore_fields.BooleanField
#: decore_Base.decore_base.classes.decore_fields.CharField
#: decore_Base.decore_base.classes.decore_fields.ManyToManyField
#: decore_Base.decore_base.classes.decore_fields.PasswordField
#: decore_Base.decore_base.decore.Decore.action
#: decore_Base.decore_base.decore.Decore.app
#: decore_Base.decore_base.decore.Decore.base
#: decore_Base.decore_base.decore.Decore.dialog
#: decore_Base.decore_base.decore.Decore.function
#: decore_Base.decore_base.decore.Decore.view
#: decore_Base.decore_base.decore.Decore.widget of
msgid "Parameters"
msgstr "Parameters"

#: decore_Base.decore_base.decore.Decore.app:3 of
msgid "Der Titel der App."
msgstr "The title of the app."

#: decore_Base.decore_base.decore.Decore.base:1 of
msgid ""
"Eine Funktion zum registrieren einer Basis in der GUI-Dashboard-Anwendung. "
"Sie wird als \"Decorator\" verwendet."
msgstr ""
"A function to register a Base in the GUI dashboard application. It is used "
"as a \"decorator\"."

#: decore_Base.decore_base.decore.Decore.base:3 of
msgid ""
"Die Basis ist das Trägerelement für die Ansicht und die Vorlage für die "
"Datenquelle im Frontend."
msgstr ""
"The Base is the support element for the View and the template for the data "
"source in the frontend."

#: decore_Base.decore_base.decore.Decore.base:5 of
msgid "Das Symbol der Basis."
msgstr "The symbol of the Base."

#: decore_Base.decore_base.decore.Decore.base:6 of
msgid "Der Titel der Basis."
msgstr "The title of the Base."

#: decore_Base.decore_base.decore.Decore.base:7 of
msgid "Die Beschreibung der Basis."
msgstr "The description of the Base."

#: decore_Base.decore_base.decore.Decore.base:8 of
msgid "Das Datenmodell der Basis."
msgstr "The Base data model."

#: decore_Base.decore_base.decore.Decore.view:1 of
msgid ""
"Eine Funktion zur Registrierung einer Ansicht. Sie wird als \"Decorator\" "
"verwendet."
msgstr "A function for registering a View. It is used as a \"decorator\"."

#: decore_Base.decore_base.decore.Decore.view:3 of
msgid "Eine Ansicht ist ein Container für die Anzeige von Daten."
msgstr "A View is a container for displaying data."

#: decore_Base.decore_base.decore.Decore.view:5 of
msgid ""
"Die ID des übergeordneten Elements. Nur zu setzen, wenn die Ansicht in einer"
" anderen Basis gerendert werden soll."
msgstr ""
"The ID of the parent element. Only to be set if the View is to be rendered "
"in a different Base."

#: decore_Base.decore_base.decore.Decore.view:6 of
msgid "Das Symbol der Ansicht."
msgstr "The icon of the View."

#: decore_Base.decore_base.decore.Decore.view:7 of
msgid "Der Titel der Ansicht."
msgstr "The title of the View."

#: decore_Base.decore_base.decore.Decore.view:8 of
msgid "Die Beschreibung der Ansicht."
msgstr "The description of the View."

#: decore_Base.decore_base.decore.Decore.view:9 of
msgid ""
"Gibt an wie die Datensätze angezeigt werden. Der Wert ``table`` stellt die "
"Datensätze in einer Tabelle dar."
msgstr ""
"Specifies how the records are displayed. The value ``table`` represents the "
"records in a table."

#: decore_Base.decore_base.decore.Decore.view:11 of
msgid "Die Felder, die in der Ansicht angezeigt werden."
msgstr "The fields that will be displayed in the View."

#: decore_Base.decore_base.decore.Decore.view:12 of
msgid "Die Filter, die in der Ansicht angezeigt werden."
msgstr "The filters that are displayed in the View."

#: decore_Base.decore_base.decore.Decore.view:13 of
msgid "Die Abfrage, die in der Ansicht angezeigt wird."
msgstr "The query that will be displayed in the View."

#: decore_Base.decore_base.decore.Decore.view:14 of
msgid ""
"Wählt die Methode wie die Datensätze der View geladen werden. Der Wert "
"``client`` lädt alle Datensätze auf einmal und überlässt den Seitenaufbau "
"dem Frontend."
msgstr ""
"Selects the method how the records of the view are loaded. The value "
"``client`` loads all records at once and leaves the page building to the "
"frontend."

#: decore_Base.decore_base.decore.Decore.view:16 of
msgid ""
"Gibt an wieviele Datensätze auf einer Seite der Ansicht angezeigt werden "
"sollen. ``16`` ist die Standardeinstellung."
msgstr ""
"Specifies how many records to display on one page of the View. ``16`` is the"
" default setting."

#: decore_Base.decore_base.decore.Decore.dialog:1 of
msgid ""
"Eine Funktion zur Registrierung eines Dialogs. Sie wird als \"Decorator\" "
"verwendet."
msgstr "A function for registering a dialog. It is used as a \"decorator\"."

#: decore_Base.decore_base.decore.Decore.dialog:3 of
msgid "Der Dialog ist das Trägerelement für Widgets"
msgstr "The dialog is the supporting element for widgets"

#: decore_Base.decore_base.decore.Decore.dialog:5 of
msgid ""
"Die ID des übergeordneten Elements. Nur zu setzen, wenn der Dialog in einer "
"Ansicht einer anderen Basis gerendert werden soll."
msgstr ""
"The ID of the parent element. To be set only if the dialog is to be rendered"
" in a View of another Base."

#: decore_Base.decore_base.decore.Decore.dialog:6 of
msgid "Das Symbol des Dialogs."
msgstr "The symbol of dialogue."

#: decore_Base.decore_base.decore.Decore.dialog:7 of
msgid "Der Titel des Dialogs."
msgstr "The title of the dialogue."

#: decore_Base.decore_base.decore.Decore.dialog:8 of
msgid "Die Beschreibung des Dialogs."
msgstr "The description of the dialogue."

#: decore_Base.decore_base.decore.Decore.dialog:9 of
msgid ""
"Gibt an wie der Dialog die Widgets darstellen wird. Der Wert ``standard`` "
"stellt die untergeordneten Widgets und Sub-Widgets untereinander dar."
msgstr ""
"Specifies how the dialog will display the widgets. The value ``standard`` "
"represents the child widgets and sub-widgets one below the other."

#: decore_Base.decore_base.decore.Decore.dialog:11 of
msgid "Der Anzeigetyp des Dialogs."
msgstr "The display type of the dialog."

#: decore_Base.decore_base.decore.Decore.dialog:12 of
msgid ""
"Der Aktivatortyp des Dialogs. Über den Wert ``none`` wird der Dialog sofort "
"beim OnLoad Ereignis der View angezeigt. Der Wert ``default`` stellt den "
"Dialog im Top-Menu der View dar. Der Wert ``context`` stellt den Dialog im "
"Kontextmenü eines Items der View dar. Der Wert ``click`` zeigt den Dialog "
"dann an wenn man einen Datensatz anklickt."
msgstr ""
"The activator type of the dialog. The value ``none`` displays the dialog "
"immediately at the view's OnLoad event. The value ``default`` represents the"
" dialog in the top menu of the view. The value ``context`` represents the "
"dialog in the context menu of an item of the view. The value ``click`` "
"displays the dialog when a record is clicked."

#: decore_Base.decore_base.decore.Decore.widget:1 of
msgid ""
"Eine Funktion zur Registrierung eines Widgets. Sie wird als \"Decorator\" "
"verwendet."
msgstr "A function for registering a widget. It is used as a \"decorator\"."

#: decore_Base.decore_base.decore.Decore.widget:3 of
msgid ""
"Ein Widget dient zur Darstellung und Interaktion mit dem Datensatz. Es "
"erhält die Daten, die der Dialog-Aktivator vorgibt. Der Wert ``none`` "
"übergibt den letzten Datensatz der Datenbanktabelle. Der Wert ``default`` "
"übergibt einen nur mit Default-Werten gefüllten Datensatz. Beim Wert "
"``context`` übergibt es den Datensatz, der im Kontextmenü der Ansicht "
"ausgewählt wurde. Und ``click`` übergibt den Datensatz, der angeklickt "
"wurde."
msgstr ""
"A widget is used to display and interact with the dataset. It receives the "
"data that the dialog activator specifies. The value ``none`` passes the last"
" record of the database table. The value ``default`` passes a dataset filled"
" only with default values. The value ``context`` passes the record selected "
"in the context menu of the View. And ``click`` passes the record that was "
"clicked."

#: decore_Base.decore_base.decore.Decore.widget:5 of
msgid ""
"Widgets, welche aus einer fremden Basis einem Dialog zugeordnet werden, "
"ergänzen die relationalen Felder eines Default-Items der fremden Datenquelle"
" mit den Daten des aktivierten Items. (Der Satz ist Scheiße zu verstehen, "
"aber er trifft genau das, was es tut). In der Sample Anwendung verwende ich "
"das beim Zuweisen von \"Contracts\" zu einer \"Person\"."
msgstr ""
"Widgets, which are assigned to a dialog from a foreign Base, supplement the "
"relational fields of a default item of the foreign data source with the data"
" of the activated item. (That sentence is crap to understand, but it hits "
"exactly what it does). In the Sample application, I use this when assigning "
"\"Contracts\" to a \"Person\"."

#: decore_Base.decore_base.decore.Decore.widget:7 of
msgid ""
"Es gibt aber auch Widgets, die mehrere Datensätze darstellen können, wie im "
"Beispiel davor werden hier auch die Relationen verwendet, um nur Daten "
"abzubilden, die etwas mit dem gewählten Item zu tun haben."
msgstr ""
"But there are also widgets that can display multiple data sets, as in the "
"example before, the relations are used here to display only data that has "
"something to do with the selected item."

#: decore_Base.decore_base.decore.Decore.widget:9 of
msgid ""
"Die ID des übergeordneten Elements. Nur zu setzen, wenn das Widget in einem "
"Dialog einer anderen Basis gerendert werden soll."
msgstr ""
"The ID of the parent element. To be set only if the widget is to be rendered"
" in a dialog of another Base."

#: decore_Base.decore_base.decore.Decore.widget:10 of
msgid "Das Symbol des Widgets."
msgstr "The icon of the widget."

#: decore_Base.decore_base.decore.Decore.widget:11 of
msgid "Der Titel des Widgets."
msgstr "The title of the widget."

#: decore_Base.decore_base.decore.Decore.widget:12 of
msgid "Die Beschreibung des Widgets."
msgstr "The description of the widget."

#: decore_Base.decore_base.decore.Decore.widget:13 of
msgid "Gibt an wie das Widget die Daten darstellen wird."
msgstr "Specifies how the widget will display the data."

#: decore_Base.decore_base.decore.Decore.widget:15 of
msgid "Die Felder, die in dem Widget angezeigt werden."
msgstr "The fields that will be displayed in the widget."

#: decore_Base.decore_base.decore.Decore.action:1 of
msgid ""
"Eine Funktion zur Registrierung einer Aktion. Sie wird als \"Decorator\" "
"verwendet."
msgstr "A function for registering an action. It is used as a \"decorator\"."

#: decore_Base.decore_base.decore.Decore.action:3 of
msgid ""
"Eine Aktion ist die tatsächliche Interaktion zwischen dem Benutzer und dem "
"Backend."
msgstr "An action is the actual interaction between the user and the backend."

#: decore_Base.decore_base.decore.Decore.action:5 of
msgid ""
"Die ID des übergeordneten Elements. Nur zu setzen, wenn die Aktion in einem "
"Widget einer anderen Basis gerendert werden soll."
msgstr ""
"The ID of the parent element. To be set only if the action is to be rendered"
" in a widget of another Base."

#: decore_Base.decore_base.decore.Decore.action:6 of
msgid "Das Symbol der Aktion."
msgstr "The symbol of action."

#: decore_Base.decore_base.decore.Decore.action:7 of
msgid "Der Titel der Aktion."
msgstr "The title of the action."

#: decore_Base.decore_base.decore.Decore.action:8 of
msgid "Die Beschreibung der Aktion."
msgstr "The description of the action."

#: decore_Base.decore_base.decore.Decore.action:9 of
msgid "Gibt an was die Aktion kann."
msgstr "Indicates what the action can do."

#: decore_Base.decore_base.decore.Decore.action:11 of
msgid "Gib an, wie die Aktion ausgelöst wird."
msgstr "Specify how the action is triggered."

#: decore_Base.decore_base.decore.Decore.action:20 of
msgid ""
"Die Aktionen durchlaufen ein Modul, welches die erhaltenen Daten aufbereitet"
" und als Keyword-Parameter an die dekorierte Funktion übergibt. Es ist alles"
" in den ``kwargs`` zu finden und man macht sich diese einfach verfügbar. Der"
" Parameter ``item`` ist ein Beispiel dafür und repräsentiert den vom "
"Frontend zurückgegebenen Datensatz. Um herauszufinden, was alles noch in den"
" ``kwargs`` steckt, bitte den Debugger benutzen."
msgstr ""
"The actions pass through a module that prepares the received data and passes"
" it as keyword parameters to the decorated function. It is all found in the "
"``kwargs`` and you just make them available. The ``item`` parameter is an "
"example of this and represents the dataset returned by the frontend. To find"
" out what else is in the ``kwargs`` please use the debugger."

#: decore_Base.decore_base.decore.Decore.function:1 of
msgid ""
"Eine Funktion zur Registrierung einer Funktion in der übergeordneten Base. "
"Sie wird als \"Decorator\" verwendet."
msgstr ""
"A function to register a function in the parent base. It is used as a "
"\"decorator\"."

#: decore_Base.decore_base.decore.Decore.function:3 of
msgid ""
"Eine Funktion wird direkt nach der Zusammenstellung des Metadaten-Pool "
"ausgeführt. Mit Funktionen kann man die Logik erweitern, Dinge vorbereiten "
"oder Hintergrundaufgaben erledigen. Sie agieren als Instanzmethoden der "
"Basis und erhalten damit den objektorientierten Ansatz."
msgstr ""
"A function is executed directly after the metadata pool is compiled. "
"Functions can be used to extend the logic, prepare things or do background "
"tasks. They act as instance methods of the Base and thus maintain the "
"object-oriented approach."

#: decore_Base.decore_base.decore.Decore.function:5 of
msgid ""
"Gibt an wie eine Funktion ausgeführt wird. Mit dem Wert ``shot`` wird sie "
"nur einmal ausgeführt. Der Wert ``work`` wird in einem Thread ausgeführt und"
" kann somit Schleifen abarbeiten die niemals enden bis der Main-Thread "
"endet."
msgstr ""
"Specifies how a function is run. With the value ``shot`` it will be executed"
" only once. The value ``work`` is executed in a thread and can therefore run"
" loops that never end until the main thread ends."

#: ../docs/docs.rst:2
msgid "Dokumentation"
msgstr "Documentation"

#: ../docs/docs.rst:3
msgid ""
"Um mit decore Base eine lauffähige GUI-Dashboard-Anwendung zu erstellen, "
"sind vergleichsweise wenige Schritte notwendig. Im Wesentlichen besteht der "
"Aufbau aus der Definition der Meta-Instanzen und der Definition des "
"Datenmodells. Die Metadaten werden vom Interpreter durch Einlesen von "
"dekorierten Funktionen zusammengestellt und als Instanzen im Pool "
"gespeichert."
msgstr ""
"To build an executable GUI dashboard application with decore Base, "
"comparatively few steps are required. Essentially, the setup consists of the"
" definition of the meta instances and the definition of the data model. The "
"metadata is compiled by the interpreter by reading in decorated functions "
"and stored as instances in the pool."

#: ../docs/docs.rst:6
msgid "Beschreibung der Meta-Instanzen"
msgstr "Description of the meta instances"

#: ../docs/docs.rst:7
msgid ""
"Meta-Instanzen entahlten die benötigten Typen und Attribute für die "
"Erstellung der GUI-Elemente. Die Meta-Instanzen werden in der Regel durch "
"dekorierte Funktionen erstellt. Einen ersten Eindruck bekommen sie im "
"Abschnitt :doc:`Erste Schritte<../getstarted>`"
msgstr ""
"Meta instances contain the required types and attributes for the build of "
"the GUI elements. The meta-instances are usually built by decorated "
"functions. You can get a first impression in the section :doc:`First "
"Steps<../getstarted>`."

#: ../docs/docs.rst:10
msgid "App"
msgstr "App"

#: ../docs/docs.rst:11
msgid ""
"Die Application-Instanz liefert die Metadaten für den Anwendung. Sie ist die"
" Wurzel für alles kommende und nimmt nur Basen auf. Die App-Instanz wird "
"durch den \"Decorator\" :meth:`app() "
"<decore_Base.decore_base.decore.Decore.app>` erstellt."
msgstr ""
"The application instance provides the metadata for the application. It is "
"the root for everything to come and only takes bases. The App instance is "
"created by the \"Decorator\" :meth:`app() "
"<decore_Base.decore_base.decore.Decore.app>`."

#: ../docs/docs.rst:14 ../getstarted.rst:96
msgid "Base"
msgstr "Base"

#: ../docs/docs.rst:15
msgid ""
"Die Base-Instanz liefert die Metadaten für die Basis. Sie ist das "
"Trägerelement für die Ansichten. Die Base-Instanz wird durch den "
"\"Decorator\" :meth:`base() <decore_Base.decore_base.decore.Decore.base>` "
"erstellt."
msgstr ""
"The Base instance provides the metadata for the Base. It is the carrier "
"element for the Views. The base instance is created by the \"decorator\" "
":meth:`base() <decore_Base.decore_base.decore.Decore.base>`."

#: ../docs/docs.rst:19 ../docs/docs.rst:29 ../docs/docs.rst:39
#: ../docs/docs.rst:48 ../docs/docs.rst:57 ../docs/docs.rst:64
msgid "**Darstellung im Frontend**"
msgstr "**Display in frontend**"

#: ../docs/docs.rst:18
msgid ""
"Die Basis ist im Grunde die freie Fläche die für die Ansichten zur Verfügung"
" steht."
msgstr "The Base is basically the free area available for the Views."

#: ../docs/docs.rst:19
msgid ""
"In der Navigation wird sie direkt unter Wurzel gelistet sobald sie mehr als "
"eine Ansicht erhält."
msgstr ""
"In the navigation it will be listed directly under Root as soon as it gets "
"more than one View."

#: ../docs/docs.rst:22 ../getstarted.rst:124
msgid "View"
msgstr "View"

#: ../docs/docs.rst:23
msgid ""
"Die View-Instanz liefert die Metadaten für die Ansicht. Ihr können Aktionen "
"und Dialoge untergeordnet werden. Die View-Instanz wird durch den "
"\"Decorator\" :meth:`view() <decore_Base.decore_base.decore.Decore.view>` "
"erstellt."
msgstr ""
"The View instance provides the metadata for the View. Actions and dialogs "
"can be subordinated to it. The view instance is created by the \"Decorator\""
" :meth:`view() <decore_Base.decore_base.decore.Decore.view>`."

#: ../docs/docs.rst:25
msgid ""
"Die unterschiedlichen Ansichts-Typen werden im Bereich :doc:`Typen<types>` "
"näher beschrieben."
msgstr ""
"The different View types are described in more detail in the "
":doc:`types<types>` section."

#: ../docs/docs.rst:28
msgid "Die Ansicht wird in der Navigation unter der Basis gelistet."
msgstr "The View is listed under the Base in the navigation."

#: ../docs/docs.rst:29
msgid "Die Ansicht wird im Ansichtsbereich der Basis gerendert."
msgstr "The View is rendered in the View area of the Base."

#: ../docs/docs.rst:32 ../getstarted.rst:145
msgid "Dialog"
msgstr "Dialog"

#: ../docs/docs.rst:33
msgid ""
"Die Dialog-Instanz liefert die Metadaten für den Dialog. Ihr können weiter "
"Dialog untergeordnet werden die dann in Tabs dargetellt werden. "
"Hauptsächlich dienen diese aber zum tragen der Widgets. Die Dialog-Instanz "
"wird durch den \"Decorator\" :meth:`dialog() "
"<decore_Base.decore_base.decore.Decore.dialog>` erstellt."
msgstr ""
"The dialog instance provides the metadata for the dialog. Further dialogs "
"can be subordinated to it, which are then displayed in tabs. Mainly, "
"however, these serve to carry the widgets. The dialog instance is built by "
"the \"Decorator\" :meth:`dialog() "
"<decore_Base.decore_base.decore.Decore.dialog>`."

#: ../docs/docs.rst:35
msgid ""
"Auch hier gibt es verschiedene Dialog-Typen die im Bereich "
":doc:`Typen<types>` näher beschrieben werden."
msgstr ""
"Here, too, there are different dialog types which are described in more "
"detail in the :doc:`types<types>` section."

#: ../docs/docs.rst:38
msgid ""
"Der Dialog kann in unterschiedlichen Display-Modis dargestellt werden. Zum "
"Beispiel als Side-Drawer oder als modales Fenster."
msgstr ""
"The dialog can be shown in different display modes. For example, as a side-"
"drawer or as a modal window."

#: ../docs/docs.rst:39
msgid ""
"Dieser wird durch die mit dem Aktivator-Attribut bestimmten Postionen oder "
"Ereignisse aufgerufen."
msgstr ""
"This is called by the items or events determined with the activator "
"attribute."

#: ../docs/docs.rst:42 ../getstarted.rst:168
msgid "Widget"
msgstr "Widget"

#: ../docs/docs.rst:43
msgid ""
"Die Widget-Instanz liefert die Metadaten für das Widget. Ihr können weitere "
"Widgets untergeordnet werden die dann gestapelt dargetellt werden. Ein "
"Widget wird für die Manipulation des Datensatzes oder Datensätze benötigt. "
"Die Widget-Instanz wird durch den \"Decorator\" :meth:`widget() "
"<decore_Base.decore_base.decore.Decore.widget>` erstellt."
msgstr ""
"The widget instance provides the metadata for the widget. It can be "
"subordinated to other widgets which are then displayed in a stacked manner. "
"A widget is needed for the manipulation of the dataset or datasets. The "
"widget instance is built by the \"Decorator\" :meth:`widget() "
"<decore_Base.decore_base.decore.Decore.widget>`."

#: ../docs/docs.rst:45
msgid ""
"Widgets können beispielsweise ein Editor ein Viewer, Listen, oder Diagramme "
"sein. Die unterschiedlichen Widget-Typen werden im Bereich "
":doc:`Typen<types>` näher beschrieben."
msgstr ""
"Widgets can be, for example, an editor, a viewer, lists, or diagrams. The "
"different widget types are described in more detail in the "
":doc:`types<types>` section."

#: ../docs/docs.rst:48
msgid "Das Widget wird im Content-Bereich des Dialoges dargestellt."
msgstr "The widget is displayed in the content area of the dialog."

#: ../docs/docs.rst:51 ../getstarted.rst:191
msgid "Action"
msgstr "Action"

#: ../docs/docs.rst:52
msgid ""
"Die Action-Instanz liefert die Metadaten für die Aktion. Sie ist das "
"Schlußlicht in der Prozesskette der Meta-Abarbeitung und dient zum "
"übermitteln der Manipulationen und der Ausführung von Aktionen im Backend. "
"Die Action-Instanz wird durch den \"Decorator\" :meth:`action() "
"<decore_Base.decore_base.decore.Decore.action>` erstellt."
msgstr ""
"The action instance provides the metadata for the action. It is the final "
"link in the meta processing chain and is used to convey the manipulations "
"and runs of actions in the backend. The action instance is built by the "
"\"decorator\" :meth:`action() "
"<decore_Base.decore_base.decore.Decore.action>`."

#: ../docs/docs.rst:54
msgid ""
"Auch Aktionen haben Typen die im Bereich :doc:`Typen<types>` näher "
"beschrieben werden. Ein Besispiel wäre der Typ ``submit`` der bestimmte "
"Daten (z.B. Item, Selektierte Items oder Strukturen) an das Backend "
"übermittelt."
msgstr ""
"Actions also have types which are described in more detail in the "
":doc:`types<types>` section. An example would be the type ``submit`` which "
"transmits certain data (e.g. item, selected items or structures) to the "
"backend."

#: ../docs/docs.rst:57
msgid ""
"Aktionen können durch das Aktivator-Attribut an unterschiedlichen Stellen im"
" Frontend positioniert werden, haben aber keine tatächliche Darstellung "
"sondern nur Schaltflächen- oder Ereignisgesteuerte Trigger."
msgstr ""
"Actions can be positioned at different places in the frontend by the "
"activator attribute, but have no actual representation, only button or event"
" driven triggers."

#: ../docs/docs.rst:60
msgid "Function"
msgstr "Function"

#: ../docs/docs.rst:61
msgid ""
"Die Function-Instanz liefert die Metadaten für Funktionen die nach dem Init "
"des Pools direkt in der Base als Instanz-Methoden ausgeführt werden. Die "
"Function-Instanz wird durch den \"Decorator\" :meth:`function() "
"<decore_Base.decore_base.decore.Decore.function>` erstellt."
msgstr ""
"The Function instance provides the metadata for functions that are run "
"directly in Base as instance methods after the pool is initiated. The "
"Function instance is built by the \"Decorator\" :meth:`function() "
"<decore_Base.decore_base.decore.Decore.function>`."

#: ../docs/docs.rst:64
msgid "Funktionen werden nicht im Frontend dargestellt oder aufgearbeitet."
msgstr "Functions are not displayed or processed in the frontend."

#: ../docs/docs.rst:67
msgid "Abarbeitungsreihenfolge"
msgstr "Processing sequence"

#: ../docs/docs.rst:68
msgid ""
"Nach dem Öffnen einer Anwendung, dem Anlegen der Base und dem Anlegen "
"weiterer Childs laufen alle Pfade auf die Action zu, die schließlich wieder "
"mit dem Backend kommuniziert, um die Manipulation der Daten zu ermöglichen. "
"Nicht jedes Komponentenobjekt kann einem anderen beliebig zugeordnet werden."
" Das Frontend arbeitet die einzelnen Objekte nur in einer festen Reihenfolge"
" ab."
msgstr ""
"After opening an application, creating the base, and creating more childs, "
"all paths run to the action, which eventually communicates back to the "
"backend to allow manipulation of the data. Not every component object can be"
" arbitrarily assigned to another. The frontend processes the individual "
"objects only in a fixed order."

#: ../docs/docs.rst:70
msgid "Diese Übersicht stellt den Prozess dieser Abarbeitung dar."
msgstr "This overview represents the process of this execution."

#: ../docs/fields.rst:2
msgid "Felder"
msgstr "Fields"

#: decore_Base.decore_base.classes.decore_fields.BackrefMetaField:1 of
msgid ""
"The BackRefMetaField's name must match the name of the specified backref in "
"the ForeignKey or ManyToMany field in the reference model."
msgstr ""
"The BackRefMetaField's name must match the name of the specified backref in "
"the ForeignKey or ManyToMany field in the reference model."

#: decore_Base.decore_base.classes.decore_fields.BackrefMetaField:3 of
msgid ""
"The BackRefMetaField is used by the user to represent relationships in the "
"**decore Front** application. For example, it can be assigned to the filter "
"or to a form. It is a MetaField and does not get a column in the database."
msgstr ""
"The BackRefMetaField is used by the user to represent relationships in the "
"**decore Front** application. For example, it can be assigned to the filter "
"or to a form. It is a MetaField and does not get a column in the database."

#: decore_Base.decore_base.classes.decore_fields.BackrefMetaField:5
#: decore_Base.decore_base.classes.decore_fields.BooleanField:6
#: decore_Base.decore_base.classes.decore_fields.CharField:6
#: decore_Base.decore_base.classes.decore_fields.ManyToManyField:6
#: decore_Base.decore_base.classes.decore_fields.PasswordField:8 of
msgid "A human-readable name for the field."
msgstr "A human-readable name for the field."

#: decore_Base.decore_base.classes.decore_fields.BackrefMetaField:6
#: decore_Base.decore_base.classes.decore_fields.BooleanField:5
#: decore_Base.decore_base.classes.decore_fields.CharField:5
#: decore_Base.decore_base.classes.decore_fields.ManyToManyField:7
#: decore_Base.decore_base.classes.decore_fields.PasswordField:7 of
msgid "Additional text to be displayed in **decore Front**."
msgstr "Additional text to be displayed in **decore Front**."

#: decore_Base.decore_base.classes.decore_fields.BackrefMetaField:7
#: decore_Base.decore_base.classes.decore_fields.ManyToManyField:8 of
msgid ""
"A List of type string. Only the speciefied fields will be displayed in the "
"filter. If None, all fields will be displayed."
msgstr ""
"A List of type string. Only the speciefied fields will be displayed in the "
"filter. If None, all fields will be displayed."

#: decore_Base.decore_base.classes.decore_fields.BackrefMetaField:8 of
msgid ""
"A dictonary containing a query to be used when querying options (e.g. in "
"selection fields in the frontend). The query always refers to the reference "
"model."
msgstr ""
"A dictonary containing a query to be used when querying options (e.g. in "
"selection fields in the frontend). The query always refers to the reference "
"model."

#: decore_Base.decore_base.classes.decore_fields.BooleanField:1 of
msgid "A field to store boolean values."
msgstr "A field to store boolean values."

#: decore_Base.decore_base.classes.decore_fields.BooleanField:3
#: decore_Base.decore_base.classes.decore_fields.CharField:3
#: decore_Base.decore_base.classes.decore_fields.ManyToManyField:5
#: decore_Base.decore_base.classes.decore_fields.PasswordField:6 of
msgid "If True, the field is allowed to be null. Defaults to False."
msgstr "If True, the field is allowed to be null. Defaults to False."

#: decore_Base.decore_base.classes.decore_fields.BooleanField:4
#: decore_Base.decore_base.classes.decore_fields.CharField:4 of
msgid "The default value for the field. Defaults to None."
msgstr "The default value for the field. Defaults to None."

#: decore_Base.decore_base.classes.decore_fields.CharField:1 of
msgid "A field to store char values."
msgstr "A field to store char values."

#: decore_Base.decore_base.classes.decore_fields.ManyToManyField:1 of
msgid ""
"A field to represent a many-to-many relationship between two models. It is a"
" MetaField and does not get a column in the database. However, a through "
"model is created by decore Base, which represents the relationship between "
"the two models."
msgstr ""
"A field to represent a many-to-many relationship between two models. It is a"
" MetaField and does not get a column in the database. However, a through "
"model is created by decore Base, which represents the relationship between "
"the two models."

#: decore_Base.decore_base.classes.decore_fields.ManyToManyField:3 of
msgid "The model to which the relationship is to be established."
msgstr "The model to which the relationship is to be established."

#: decore_Base.decore_base.classes.decore_fields.ManyToManyField:4 of
msgid ""
"The name of the field in the reference model that represents the "
"relationship to the model."
msgstr ""
"The name of the field in the reference model that represents the "
"relationship to the model."

#: decore_Base.decore_base.classes.decore_fields.ManyToManyField:9 of
msgid ""
"A dictonary containing a query to be used when querying choices (e.g. in "
"selection fields in the frontend). The query always refers to the reference "
"model."
msgstr ""
"A dictonary containing a query to be used when querying choices (e.g. in "
"selection fields in the frontend). The query always refers to the reference "
"model."

#: decore_Base.decore_base.classes.decore_fields.PasswordField:2 of
msgid ""
"The keybase is a KeePass file and should be protected by setting the correct"
" access rights (ACL)."
msgstr ""
"The keybase is a KeePass file and should be protected by setting the correct"
" access rights (ACL)."

#: decore_Base.decore_base.classes.decore_fields.PasswordField:4 of
msgid "A field to store passwords in the keybase and to use them again."
msgstr "A field to store passwords in the keybase and to use them again."

#: ../docs/types.rst:2
msgid "Typen"
msgstr "Types"

#: ../getstarted.rst:-1 ../index.rst:-1
msgid "create dashbord with python fastly"
msgstr "create dashbord with python fastly"

#: ../getstarted.rst:-1 ../index.rst:-1
msgid ""
"python gui, decore, python database, python dashboard, python orm, python "
"ui, dashboard creation, python application, ui framework, ui toolkit"
msgstr ""
"python gui, decore, python database, python dashboard, python orm, python "
"ui, dashboard creation, python application, ui framework, ui toolkit"

#: ../getstarted.rst:6
msgid "Erste Schritte"
msgstr "Get started"

#: ../getstarted.rst:7
msgid ""
"Um die schnelle GUI-Dashboard-Erstellung, mit decore Base in Python, zu "
"veranschaulichen werden wir nun gemeinsam eine kleine UI in Form einer "
"Webanwendung erstellen."
msgstr ""
"To illustrate the fast GUI dashboard creation, using decore Base in Python, "
"we will now create a small UI together in the form of a web application."

#: ../getstarted.rst:9
msgid ""
"Die dekorierten Funktionen dienen, in allererster Linie, der Erstellung von "
"Metainformationen für die spätere Auswertung im Frontend der Anwendung und "
"sind nichts, wovor man sich fürchten muss."
msgstr ""
"The decorated functions serve, first and foremost, to create meta-"
"information for later evaluation in the front-end of the application and are"
" nothing to be afraid of."

#: ../getstarted.rst:11
msgid "*Es ist wirklich einfach, bitte folgen Sie mir!*"
msgstr "*It's really simple, please follow me!*"

#: ../getstarted.rst:14
msgid "Installation"
msgstr "Installation"

#: ../getstarted.rst:15
msgid ""
"Erstellen Sie zunächst ein leeres Python-Projekt in Ihrem gewünschten "
"Verzeichnis."
msgstr "First, create an empty Python project in your desired directory."

#: ../getstarted.rst:17
msgid ""
"Um decore Base zu installieren, führen wir den folgenden Befehl im "
"Stammverzeichnis des Projekts aus. Verwenden wir das Terminal in vscode."
msgstr ""
"To install decore Base, we run the following command in the root directory "
"of the project. Let's use the terminal in vscode."

#: ../getstarted.rst:23
msgid ""
"Dies erfordert eine aktivierte Python-Umgebung! Um mehr darüber zu erfahren,"
" besuchen Sie `Python-Umgebungen in VS Code "
"<https://code.visualstudio.com/docs/python/environments>`_."
msgstr ""
"This requires an enabled Python environment! To learn more, visit `Python "
"Environments in VS Code "
"<https://code.visualstudio.com/docs/python/environments>`_."

#: ../getstarted.rst:26
msgid "Vorbereitung"
msgstr "Preparation"

#: ../getstarted.rst:28
msgid ""
"Um für unsere zukünftige Python GUI-Dashboard-Anwendung alles nötige an "
"Pfaden und Einstellungen zu erhalten, müssen wir noch die Vorbereitung "
"durchführen."
msgstr ""
"In order to get everything we need in terms of paths and settings for our "
"future Python GUI dashboard application, we still need to do the "
"preparation."

#: ../getstarted.rst:30
msgid ""
"Erstellen wir nun eine neue Datei mit dem Namen **app.py** im "
"Hauptverzeichnis des Projekts."
msgstr ""
"Now let's create a new file named **app.py** in the root directory of the "
"project."

#: ../getstarted.rst:32
msgid ""
"Um decore zu verwenden, importieren wir es zunächst in das Modul **app.py**."
msgstr "To use decore, we first import it into the **app.py** module."

#: ../getstarted.rst:38
msgid ""
"Dann verwenden wir den Befehl ``prepare``, um alle erforderlichen "
"Hilfsdateien im Stammverzeichnis des Projekts zu erstellen."
msgstr ""
"Then we use the ``prepare`` command to build all the necessary auxiliary "
"files in the root directory of the project."

#: ../getstarted.rst:40
msgid ""
"Um nun die Anwendung tatsächlich vorzubereiten, führen wir den Befehl "
"``python app.py --prepare`` im Terminal aus. Der Pfad muss im "
"Hauptverzeichnis des Projekts liegen, also dort wo sich die **app.py** "
"befindet."
msgstr ""
"Now to actually prepare the application, we run the command ``python app.py "
"--prepare`` in the terminal. The path must be in the root directory of the "
"project, i.e. where the **app.py** is located."

#: ../getstarted.rst:43
msgid "Verwendung"
msgstr "Usage"

#: ../getstarted.rst:44
msgid ""
"Damit der Python-Interpreter die zukünftigen Basisklassen verarbeiten kann, "
"fügen wir den folgenden Import hinzu."
msgstr ""
"To allow the Python interpreter to process the future base classes, we add "
"the following import."

#: ../getstarted.rst:50
msgid ""
"Normalerweise enthält ein Python-Hauptmodul eine Abfrage, die prüft, ob es "
"das Hauptmodul ist, so dass wir anschließend die Funktion ``main`` aufrufen "
"können."
msgstr ""
"Normally, a Python main module contains a query that checks if it is the "
"main module so that we can subsequently call the ``main`` function."

#: ../getstarted.rst:52
msgid ""
"Als nächstes erstellen wir eine Zeile ``if __name__ == '__main__':`` in der "
"**app.py** Datei."
msgstr ""
"Next, we create a line ``if __name__ == '__main__':`` in the **app.py** "
"file."

#: ../getstarted.rst:54
msgid ""
"Um eine neue \"decore\" Anwendungsinstanz zu erstellen, benutzen wir eine "
"mit ``@decore.app`` dekorierte ``main()`` Funktion in der **app.py** Datei, "
"direkt unter der Zeile: ``if __name__ == '__main__':``."
msgstr ""
"To create a new \"decore\" application instance, we use a ``main()`` "
"function decorated with ``@decore.app`` in the **app.py** file, just below "
"the line: ``if __name__ == '__main__':``."

#: ../getstarted.rst:67
msgid "Model"
msgstr "Model"

#: ../getstarted.rst:68
msgid ""
"In einem Modell legen wir die Datenfelder fest, die später einer Basis "
"zugeordnet werden muss. Es dient als Datenbankschnittstelle zu den "
"Datenbanktreibern wie SQLite, MySQL, PostgreSQL, etc."
msgstr ""
"In a Model, we define the data fields that must later be assigned to a Base."
" It serves as a database interface to the database drivers like SQLite, "
"MySQL, PostgreSQL, etc."

#: ../getstarted.rst:70
msgid ""
"Wir erstellen nun die Datei first_model.py im Verzeichnis **models** und "
"fügen den folgenden Code ein:"
msgstr ""
"We now create the file first_model.py in the directory **models** and insert"
" the following code:"

#: ../getstarted.rst:73
msgid ""
"Es muss nicht für jede Basis ein Modell angelegt werden aber es muss jedes "
"zu verwenden Modell eine Basis haben, die über die Datei **__init__.py**, "
"importiert werden muss. Nur so werden Rellationen zwischen den Modellen auch"
" im Frontend ausgewertet und dargestellt."
msgstr ""
"It is not necessary to create a model for each base, but each model to be "
"used must have a base, which must be imported via the file **__init__.py**. "
"This is the only way to evaluate and display rellations between the models "
"in the frontend."

#: ../getstarted.rst:76
msgid ""
"Um mögliche zirkuläre Importe zu vermeiden, legen wir die Modellklassen in "
"einem eigenen Verzeichnis **models** in unserem Projektstammverzeichnis an. "
"Das Verzeichnis **models** wurde durch den zuvor ausgeführten Befehl "
"``python app.py --prepare`` erstellt."
msgstr ""
"To avoid possible circular imports, we create the model classes in a "
"separate **models** directory in our project root directory. The **models** "
"directory was created by the previously executed ``python app.py --prepare``"
" command."

#: ../getstarted.rst:88
msgid ""
"In dem hier gezeigten Beispiel importieren wir aus der **uniform library** "
"die Klasse Conform_model und erweitern sie um die Felder Vorname und "
"Nachname."
msgstr ""
"In the example shown here, we import the Conform_model class from the "
"**uniform library** and extend it with the First Name and Last Name fields."

#: ../getstarted.rst:90
msgid ""
"Die Modelle in **decore Base** basieren auf dem großartigen Peewee ORM. Um "
"mehr über Peewee zu erfahren, besuchen Sie `Peewee ORM <http://docs.peewee-"
"orm.com/en/latest/>`_."
msgstr ""
"The models in **decore Base** are based on the great Peewee ORM. To learn "
"more about Peewee, visit `Peewee ORM <http://docs.peewee-"
"orm.com/en/latest/>`_."

#: ../getstarted.rst:93
msgid ""
"Beim Importieren ist zu beachten, dass wir alles (*) aus dem conform_model "
"Namespace importieren, um auch die Feldklassen zu erhalten."
msgstr ""
"When importing, note that we import everything (*) from the conform_model "
"namespace to get the field classes as well."

#: ../getstarted.rst:97
msgid ""
"Die Basisklassen dienen der decore-Anwendung als Trägerelement für die View-"
"Komponenten, pflegen das Datenmodell ein und gelten damit auch als "
"Datenquelle für die Auswertung im Frontend des Dashboards."
msgstr ""
"The base classes serve the decore application as a carrier element for the "
"view components, maintain the data model and are thus also considered the "
"data source for evaluation in the dashboard frontend."

#: ../getstarted.rst:99
msgid ""
"Nun müssen wir ein neues Python-Modul erstellen, das z.B. eine Basisklasse "
"enthält: **first_base.py**, im Verzeichnis **bases** in unserem "
"Projektstammverzeichnis. Das Verzeichnis **bases** wurde durch den zuvor "
"ausgeführten Befehl ``python app.py --prepare`` miterzeugt."
msgstr ""
"Now we need to create a new Python module containing, for example, a base "
"class: **first_base.py**, in the **bases** directory in our project root "
"directory. The **bases** directory was co-created by the ``python app.py "
"--prepare`` command executed earlier."

#: ../getstarted.rst:112
msgid ""
"Um das zuvor erstellte Modell zu verwenden, importieren wir es in die Base-"
"Klasse und übergeben es an den Parameter ``model``."
msgstr ""
"To use the previously created model, we import it into the Base class and "
"pass it to the ``model`` parameter."

#: ../getstarted.rst:115
msgid ""
"In order for the Python interpreter to be able to process the base classes, "
"we have to import them into the __init__.py file in the **bases** directory."
" The order of the individual imports also determines the order in **decore "
"Front**."
msgstr ""
"In order for the Python interpreter to be able to process the base classes, "
"we have to import them into the __init__.py file in the **bases** directory."
" The order of the individual imports also determines the order in **decore "
"Front**."

#: ../getstarted.rst:117
msgid "We edit the **__init__.py** file and insert the following code:"
msgstr "We edit the **__init__.py** file and insert the following code:"

#: ../getstarted.rst:125
msgid ""
"Views werden von der decore-Anwendung verwendet, um die Datensätze im "
"Frontend der Webanwendung zu präsentieren."
msgstr ""
"Views are used by the decore application to present the data sets in the "
"front end of the web application."

#: ../getstarted.rst:127
msgid ""
"Mit dem View-Decorator können wir nun eine Ansichts-Komponente erstellen und"
" sie, unter der zuvor erstellten Basisklasse, einhängen."
msgstr ""
"Using the View decorator, we can now create a View component and mount it, "
"under the base class we created earlier."

#: ../getstarted.rst:129
msgid ""
"Wir bearbeiten nun die Datei **first_base.py** erneut und erweitern den Code"
" wie folgt:"
msgstr ""
"We now edit the **first_base.py** file again and extend the code as follows:"

#: ../getstarted.rst:146
msgid ""
"Dialoge sind die unterstützenden Elemente für Widgets im Frontend der "
"Webanwendung. Sie können Ansichten aber auch untergeordneten Widgets "
"hinzugefügt werden und steuern die Sichtbarkeit und den Anzeigestil von "
"Kindelementen. Dialoge erhalten auch die Kontrolle über die Sendefunktionen "
"der Widgets."
msgstr ""
"Dialogs are the supporting elements for widgets in the front end of the web "
"application. They can be added to views but also to child widgets and "
"control the visibility and display style of child elements. Dialogs also get"
" control over the sending functions of the widgets."

#: ../getstarted.rst:148
msgid ""
"In unserem Fall erstellen wir einen Dialog, um eine neue Person mit Vornamen"
" und Nachnamen anzulegen."
msgstr ""
"In our case, we create a dialog to create a new person with first name and "
"last name."

#: ../getstarted.rst:150
msgid ""
"Hier gehen wir ... wieder die Datei **first_base.py** und erweitern den Code"
" wie folgt:"
msgstr ""
"Here we go ... again the file **first_base.py** and extend the code as "
"follows:"

#: ../getstarted.rst:169
msgid ""
"Widgets sind Komponenten, mit denen wir Interaktionen mit dem einzelnen "
"Datensatz durchführen können. Sie können nur zu Dialogen hinzugefügt werden "
"und sind stapelbar."
msgstr ""
"Widgets are components that allow us to perform interactions with the single"
" record. They can only be added to dialogs and are stackable."

#: ../getstarted.rst:171
msgid ""
"Was wir jetzt brauchen, ist ein Eingabeformular, um die Daten für die neue "
"Person einzugeben."
msgstr ""
"What we need now is an input form to enter the data for the new person."

#: ../getstarted.rst:192
msgid ""
"Actions sind Methoden, mit das Frontend mit **decore Base** kommunizieren "
"kann. Sie können zu View und Widgets hinzugefügt werden und sind die "
"einzigen echten Klassenmethoden und werden direkt in der Basis aufgerufen."
msgstr ""
"Actions are methods that allow the frontend to communicate with **decore "
"Base**. They can be added to view and widgets and are the only real class "
"methods and are called directly in Base."

#: ../getstarted.rst:194
msgid ""
"Wir brauchen nun eine Aktion, um die Daten der neuen Person zu speichern und"
" erweitern den Code in **first_base.py** wie folgt:"
msgstr ""
"We now need an action to store the data of the new person and extend the "
"code in **first_base.py** as follows:"

#: ../getstarted.rst:221
msgid ""
"Um einen Datensatz mit decore Base zu erstellen, müssen wir eine Instanz des"
" Modells erstellen. In unserem Fall **First_model**. Die Instanz wird mit "
"den Daten aus dem Formular gefüllt und dann gespeichert."
msgstr ""
"To build a dataset with decore Base, we need to create an instance of the "
"Model. In our case **First_model**. The instance is filled with the data "
"from the form and then saved."

#: ../getstarted.rst:223
msgid ""
"Die ID, in Form einer UUID im Textformat, wird automatisch generiert und "
"muss nicht gesondert angegeben werden."
msgstr ""
"The ID, in the form of a UUID in text format, is generated automatically and"
" does not need to be specified separately."

#: ../getstarted.rst:226
msgid ""
"Das Feld **titel** muss bei jeder Datensatzerstellung verwendet werden. "
"Andernfalls wird das Element die Validierung nicht bestehen. Es sollte "
"ausserdem immer eindeutig sein, also keine gleichen Titel in der Datenbank "
"geben."
msgstr ""
"The **title** field must be used for each record creation. Otherwise the "
"element will not pass the validation. It should also always be unique, i.e. "
"there should be no identical titles in the database."

#: ../getstarted.rst:229
msgid "Ausführung, Entwicklung und Erstellung"
msgstr "Run, development and build"

#: ../getstarted.rst:231
msgid "Ausführung"
msgstr "Run"

#: ../getstarted.rst:232
msgid ""
"Um Ihre Anwendung zu starten, führen Sie ``python app.py`` in Ihrem Projekt-"
"Stammverzeichnis aus. Verwenden Sie das Terminal in vscode."
msgstr ""
"To start your application, run ``python app.py`` in your project root "
"directory. Use the terminal in vscode."

#: ../getstarted.rst:234 ../getstarted.rst:240
msgid "Öffnen Sie den Browser und geben Sie ``http://localhost:5555`` ein."
msgstr "Open the browser and type ``http://localhost:5555``."

#: ../getstarted.rst:237
msgid "Entwicklung"
msgstr "Development"

#: ../getstarted.rst:238
msgid ""
"Um Ihre Anwendung zu entwickeln, verwenden Sie Ihren Debugger mit dem Profil"
" ``[dev] decore base development`` in vscode."
msgstr ""
"To develop your application, use your debugger with the ``[dev] decore base "
"development`` profile in vscode."

#: ../getstarted.rst:243
msgid "Erstellung"
msgstr "Build"

#: ../getstarted.rst:244
msgid ""
"Um Ihre Anwendung zu erstellen, führen Sie ``python app.py --build`` in "
"Ihrem Projekt-Stammverzeichnis aus. Verwenden Sie das Terminal in vscode."
msgstr ""
"To build your application, run ``python app.py --build`` in your project "
"root directory. Use the terminal in vscode."

#: ../index.rst:55
msgid "Get started"
msgstr "Get started"

#: ../index.rst:55
msgid "Sample"
msgstr "Sample"

#: ../index.rst:55
msgid "Docs"
msgstr "Docs"

#: ../index.rst:-1
msgid "decore Base | UI fastly"
msgstr "decore Base | UI fastly"

#: ../index.rst:-1
msgid "index, follow"
msgstr "index, follow"

#: ../index.rst:8
msgid "Erstellen sie GUI-Dashboard-Anwendungen in Python schnell und einfach."
msgstr "Build GUI dashboard applications in Python fast and easy."

#: ../index.rst:29
msgid ""
"decore Base ist ein out-of-the-box \"Python to Vue.js\" Datenanwendungs-"
"Dashboard, das Ihnen hilft, in wenigen einfachen Schritten von der Idee zur "
"Ansicht zu gelangen. Es richtet sich an diejenigen, die sich auf die "
"Ergebnisse ihrer Algorithmen konzentrieren wollen, wissenschaftliche Arbeit "
"leisten oder Lehr- und Lernfunktionen ausführen wollen."
msgstr ""
"decore Base is an out-of-the-box \"Python to Vue.js\" data application "
"dashboard that helps you go from idea to view in a few simple steps. It is "
"aimed at those who want to focus on the results of their algorithms, do "
"scientific work, or perform teaching and learning functions."

#: ../index.rst:32
msgid "Funktionen und Integrationen"
msgstr "Functions and integrations"

#: ../index.rst:33
msgid ""
"Fertige SPA (Single Page Application) mit Vue.js unter Verwendung des Quasar"
" Frameworks (https://github.com/quasarframework/quasar)"
msgstr ""
"Finished SPA (Single Page Application) with Vue.js using the Quasar "
"Framework (https://github.com/quasarframework/quasar)"

#: ../index.rst:34
msgid ""
"Vordefinierte Webapi für Metadaten und Aktionen mit Flask "
"(https://github.com/pallets/flask)"
msgstr ""
"Predefined webapi for metadata and actions with Flask "
"(https://github.com/pallets/flask)"

#: ../index.rst:35
msgid ""
"Integriertes ORM für Datenmanagement und Datenbankschnittstellen (SQLite) "
"powered by the great Peewee (https://github.com/coleifer/peewee)"
msgstr ""
"Integrated ORM for data management and database interfaces (SQLite) powered "
"by the great Peewee (https://github.com/coleifer/peewee)"

#: ../index.rst:36
msgid "Datensatz-Validierung mit Cerberus (https://github.com/pyeve/cerberus)"
msgstr "Data set validation with Cerberus (https://github.com/pyeve/cerberus)"

#: ../index.rst:37
msgid ""
"Passwortverwaltung mit pykeepass (https://github.com/libkeepass/pykeepass)"
msgstr ""
"Password management with pykeepass (https://github.com/libkeepass/pykeepass)"

#: ../index.rst:39
msgid "Bitte unterstützen Sie diese großartigen Projekte!"
msgstr "Please support these great projects!"

#: ../index.rst:42
msgid "Contribution"
msgstr "Contribution"

#: ../index.rst:43
msgid ""
"Die größte Hilfe, die ich im Moment bekommen kann, ist, wenn Sie einen Blick"
" auf das Projekt werfen und mir sagen, was Sie davon halten. Ich bin für "
"jede Kritik dankbar."
msgstr ""
"The biggest help I can get right now is if you take a look at the project "
"and tell me what you think. I am grateful for any criticism."

#: ../index.rst:45
msgid ""
"Wenn Sie etwas in der Dokumentation in Bezug auf Funktionen, Fehler oder "
"Unklarheiten finden, lassen Sie es mich bitte wissen. Bitte benutzen Sie "
"dazu den Problembereich im Repository. "
"`<https://github.com/KemoPanzah/decore_Base/issues>`_"
msgstr ""
"If you find something in the documentation related to features, bugs or "
"ambiguities, please let me know. Please use the problem area in the "
"repository to do so. `<https://github.com/KemoPanzah/decore_Base/issues>`_"

#: ../index.rst:48
msgid "Notes"
msgstr "Notes"

#: ../index.rst:49
msgid ""
"**decore Base ist derzeit in Arbeit, nur lokal bereitstellbar, nur für "
"Windows verfügbar und noch nicht produktionsbereit**."
msgstr ""
"**decore Base is currently a work in progress, only locally deployable, only"
" available for Windows and not yet production ready**."

#: ../index.rst:51
msgid ""
"Die empfohlene IDE ist Visual Studio Code und alle meine Kommentare und "
"Dokumentationen hier beziehen sich auch nur auf vscode."
msgstr ""
"The recommended IDE is Visual Studio Code and all my comments and "
"documentation here also refer to vscode only."

#: ../index.rst:53
msgid ""
"Diese Dokumentation wurde mit Deepl vom Deutschen ins Englische übersetzt."
msgstr ""
"This documentation was translated from German into English with Deepl."

#: ../sample.rst:2
msgid "Sample application"
msgstr "Sample application"

#: ../sample.rst:3
msgid ""
"To better understand how decore base works, it is best to look at the sample"
" application. The application represents my continuous development of decore"
" base."
msgstr ""
"To better understand how decore base works, it is best to look at the sample"
" application. The application represents my continuous development of decore"
" base."

#: ../sample.rst:5
msgid "https://github.com/KemoPanzah/decore_Sample"
msgstr "https://github.com/KemoPanzah/decore_Sample"

#~ msgid "Let's first create an empty Python project in your desired directory."
#~ msgstr "Let's first create an empty Python project in your desired directory."

#~ msgid ""
#~ "To install decore Base, we run the following command in the project root "
#~ "directory. Let's use the terminal in vscode."
#~ msgstr ""
#~ "To install decore Base, we run the following command in the project root "
#~ "directory. Let's use the terminal in vscode."

#~ msgid "Overview"
#~ msgstr "Overview"

#~ msgid "decore Base"
#~ msgstr "decore Base"

#~ msgid "Preperation"
#~ msgstr "Preperation"

#~ msgid ""
#~ "Now let's create a new file named **app.py** in the project root directory."
#~ msgstr ""
#~ "Now let's create a new file named **app.py** in the project root directory."

#~ msgid ""
#~ "Then we use the **prepare** command to create all the necessary auxiliary "
#~ "files in the project root directory."
#~ msgstr ""
#~ "Then we use the **prepare** command to create all the necessary auxiliary "
#~ "files in the project root directory."

#~ msgid ""
#~ "Now, to actually prepare the application, we run the command ``python app.py"
#~ " --prepare`` in the terminal. The path must be in the project root "
#~ "directory, i.e. where the **app.py** is located."
#~ msgstr ""
#~ "Now, to actually prepare the application, we run the command ``python app.py"
#~ " --prepare`` in the terminal. The path must be in the project root "
#~ "directory, i.e. where the **app.py** is located."

#~ msgid "Usage"
#~ msgstr "Usage"

#~ msgid ""
#~ "To allow the Python interpreter to process the future base classes, we add "
#~ "the following import."
#~ msgstr ""
#~ "To allow the Python interpreter to process the future base classes, we add "
#~ "the following import."

#~ msgid ""
#~ "Typically, a Python main module contains a query that checks if it is the "
#~ "main module so that we can call the ``main`` function afterwards."
#~ msgstr ""
#~ "Typically, a Python main module contains a query that checks if it is the "
#~ "main module so that we can call the ``main`` function afterwards."

#~ msgid ""
#~ "In a model we define the data fields that are needed for the later assigned "
#~ "base. It serves as a database interface to the database drivers such as "
#~ "SQLite, MySQL, PostgreSQL, etc."
#~ msgstr ""
#~ "In a model we define the data fields that are needed for the later assigned "
#~ "base. It serves as a database interface to the database drivers such as "
#~ "SQLite, MySQL, PostgreSQL, etc."

#~ msgid ""
#~ "We now create the file first_model.py in the directory **models** and insert"
#~ " the following code:"
#~ msgstr ""
#~ "We now create the file first_model.py in the directory **models** and insert"
#~ " the following code:"

#~ msgid ""
#~ "To avoid possible circular imports we create the model classes in a separate"
#~ " directory **models** in our project root directory. The directory "
#~ "**models** was created by the previously executed command ``python app.py "
#~ "--prepare``."
#~ msgstr ""
#~ "To avoid possible circular imports we create the model classes in a separate"
#~ " directory **models** in our project root directory. The directory "
#~ "**models** was created by the previously executed command ``python app.py "
#~ "--prepare``."

#~ msgid ""
#~ "In the example shown here, we import, from the **uniform library**, the "
#~ "Conform_model class and extend it with the firstname and lastname fields."
#~ msgstr ""
#~ "In the example shown here, we import, from the **uniform library**, the "
#~ "Conform_model class and extend it with the firstname and lastname fields."

#~ msgid ""
#~ "When importing please note that we import everything (*) from the "
#~ "conform_model namespace to get the field classes as well."
#~ msgstr ""
#~ "When importing please note that we import everything (*) from the "
#~ "conform_model namespace to get the field classes as well."

#~ msgid ""
#~ "These base classes serve the decore application as a carrier element for the"
#~ " view components, maintain the data model and are thus also considered the "
#~ "data source for evaluation in the **decore Front** web application."
#~ msgstr ""
#~ "These base classes serve the decore application as a carrier element for the"
#~ " view components, maintain the data model and are thus also considered the "
#~ "data source for evaluation in the **decore Front** web application."

#~ msgid ""
#~ "Now we need to create a new Python module containing a base class, for "
#~ "example: **first_base.py**, in the **bases** directory in our project root "
#~ "directory. The **bases** directory was co-created by the ``python app.py "
#~ "--prepare`` command executed earlier."
#~ msgstr ""
#~ "Now we need to create a new Python module containing a base class, for "
#~ "example: **first_base.py**, in the **bases** directory in our project root "
#~ "directory. The **bases** directory was co-created by the ``python app.py "
#~ "--prepare`` command executed earlier."

#~ msgid ""
#~ "To use the previously created model, we import it into the Base class and "
#~ "pass it to the ``model`` parameter."
#~ msgstr ""
#~ "To use the previously created model, we import it into the Base class and "
#~ "pass it to the ``model`` parameter."

#~ msgid "webapp, python, UI, fastly, decore, Base, Front"
#~ msgstr "webapp, python, UI, fastly, decore, Base, Front"

#~ msgid ""
#~ "Um für unsere zukünftige Python Gui Dashboard-Anwendung alles nötige an "
#~ "Pfaden und Einstellungen zu erhalten, müssen wir noch die Vorbereitung "
#~ "durchführen."
#~ msgstr ""
#~ "In order to get everything we need in terms of paths and settings for our "
#~ "future python gui dashboard application, we still need to do the "
#~ "preparation."

#~ msgid "A function for opening an app. It is used as a decorator."
#~ msgstr "A function for opening an app. It is used as a decorator."

#~ msgid "The title of the app."
#~ msgstr "The title of the app."

#~ msgid "A function for opening a base. It is used as a decorator."
#~ msgstr "A function for opening a base. It is used as a decorator."

#~ msgid ""
#~ "The base is the carrier element for the view and the template for the data "
#~ "source."
#~ msgstr ""
#~ "The base is the carrier element for the view and the template for the data "
#~ "source."

#~ msgid "The icon of the base."
#~ msgstr "The icon of the base."

#~ msgid "The title of the base."
#~ msgstr "The title of the base."

#~ msgid "The description of the base."
#~ msgstr "The description of the base."

#~ msgid ""
#~ "The data model of the base. It forms a kind of context for all child "
#~ "elements of the base."
#~ msgstr ""
#~ "The data model of the base. It forms a kind of context for all child "
#~ "elements of the base."

#~ msgid ""
#~ "Views are used by the decore application to present the data sets in the "
#~ "**decore Front** web application."
#~ msgstr ""
#~ "Views are used by the decore application to present the data sets in the "
#~ "**decore Front** web application."

#~ msgid ""
#~ "With the view decorator we can now create a view component and link it to "
#~ "the previously created base class."
#~ msgstr ""
#~ "With the view decorator we can now create a view component and link it to "
#~ "the previously created base class."

#~ msgid ""
#~ "We now edit the **first_base.py** file again and extend the code as follows:"
#~ msgstr ""
#~ "We now edit the **first_base.py** file again and extend the code as follows:"

#~ msgid ""
#~ "Dialogs are the supporting elements for widgets in the **decore Front** web "
#~ "application. They can only be added to views and control the visibility and "
#~ "display style of child elements. Dialogs also get control over the submit "
#~ "functions of the widgets."
#~ msgstr ""
#~ "Dialogs are the supporting elements for widgets in the **decore Front** web "
#~ "application. They can only be added to views and control the visibility and "
#~ "display style of child elements. Dialogs also get control over the submit "
#~ "functions of the widgets."

#~ msgid ""
#~ "In our case, we create a diaolg to create a new person with first name and "
#~ "last name."
#~ msgstr ""
#~ "In our case, we create a diaolg to create a new person with first name and "
#~ "last name."

#~ msgid ""
#~ "Widgets are components with which we can perform interactions on the single "
#~ "record. They can only be added to dialogs and are stackable."
#~ msgstr ""
#~ "Widgets are components with which we can perform interactions on the single "
#~ "record. They can only be added to dialogs and are stackable."

#~ msgid ""
#~ "What we need now is to create an input form to enter the data for the new "
#~ "person."
#~ msgstr ""
#~ "What we need now is to create an input form to enter the data for the new "
#~ "person."

#~ msgid ""
#~ "Actions are methods with which **decore Front** can communicate with "
#~ "**decore Base**. They can be added to views and widgets and are the only "
#~ "real class methods in the meta kit."
#~ msgstr ""
#~ "Actions are methods with which **decore Front** can communicate with "
#~ "**decore Base**. They can be added to views and widgets and are the only "
#~ "real class methods in the meta kit."

#~ msgid ""
#~ "We now need an action to store the data of the new person and extend the "
#~ "code in **first_base.py** as follows:"
#~ msgstr ""
#~ "We now need an action to store the data of the new person and extend the "
#~ "code in **first_base.py** as follows:"

#~ msgid ""
#~ "To create a record with decore Base, we need to create an instance of the "
#~ "model. In our case **First_model**. The instance is filled with the data "
#~ "from the form and then saved."
#~ msgstr ""
#~ "To create a record with decore Base, we need to create an instance of the "
#~ "model. In our case **First_model**. The instance is filled with the data "
#~ "from the form and then saved."

#~ msgid ""
#~ "The ID in the form of a UUID is generated automatically and does not have to"
#~ " be specified separately."
#~ msgstr ""
#~ "The ID in the form of a UUID is generated automatically and does not have to"
#~ " be specified separately."

#~ msgid ""
#~ "The field **title** was inherited from the class **Deform_model** and must "
#~ "be used for each record creation. Otherwise the item will fail the "
#~ "validation."
#~ msgstr ""
#~ "The field **title** was inherited from the class **Deform_model** and must "
#~ "be used for each record creation. Otherwise the item will fail the "
#~ "validation."

#~ msgid "Run, Development and Build"
#~ msgstr "Run, Development and Build"

#~ msgid ""
#~ "To start only your application, run ``python app.py`` in your project root "
#~ "directory. Use the terminal in vscode."
#~ msgstr ""
#~ "To start only your application, run ``python app.py`` in your project root "
#~ "directory. Use the terminal in vscode."

#~ msgid "Development"
#~ msgstr "Development"

#~ msgid "Build"
#~ msgstr "Build"

#~ msgid ""
#~ "To build your application, run ``python app.py --build`` in your project "
#~ "root directory. Use the terminal in vscode."
#~ msgstr ""
#~ "To build your application, run ``python app.py --build`` in your project "
#~ "root directory. Use the terminal in vscode."

#~ msgid "decore Base | Get started"
#~ msgstr "decore Base | Get started"

#~ msgid "Eine Funktion zum Öffnen einer App. Sie wird als \"Decorator\" verwendet."
#~ msgstr "A function for opening an app. It is used as a \"decorator\"."

#~ msgid "Der Titel der Anwendung."
#~ msgstr "The title of the application."

#~ msgid ""
#~ "Das Datenmodell der Basis. Es bildet eine Art Kontext und Datenquelle für "
#~ "alle untergeordneten Elemente der Basis."
#~ msgstr ""
#~ "The data model of the Base. It forms a kind of context and data source for "
#~ "all child elements of the Base."

#~ msgid "A function to register a view. It is used as a decorator."
#~ msgstr "A function to register a view. It is used as a decorator."

#~ msgid ""
#~ "The ID of the parent element. Only to be set if the view is to be rendered "
#~ "in another base."
#~ msgstr ""
#~ "The ID of the parent element. Only to be set if the view is to be rendered "
#~ "in another base."

#~ msgid "The icon of the view."
#~ msgstr "The icon of the view."

#~ msgid "The title of the view."
#~ msgstr "The title of the view."

#~ msgid "The description of the view."
#~ msgstr "The description of the view."

#~ msgid "The type of the view."
#~ msgstr "The type of the view."

#~ msgid "The active fields of the view."
#~ msgstr "The active fields of the view."

#~ msgid "The fields that are used in filter."
#~ msgstr "The fields that are used in filter."

#~ msgid "The default query of the view."
#~ msgstr "The default query of the view."

#~ msgid "The pagination type of the view."
#~ msgstr "The pagination type of the view."

#~ msgid "The pagination records of the view."
#~ msgstr "The pagination records of the view."

#~ msgid "Api documentation"
#~ msgstr "Api documentation"

#~ msgid "Api Reference"
#~ msgstr "Api Reference"

#~ msgid "A function to register a dialog. It is used as a decorator."
#~ msgstr "A function to register a dialog. It is used as a decorator."

#~ msgid ""
#~ "The ID of the parent element. Only to be set if the dialog is to be rendered"
#~ " in a view of another base."
#~ msgstr ""
#~ "The ID of the parent element. Only to be set if the dialog is to be rendered"
#~ " in a view of another base."

#~ msgid "The icon of the dialog."
#~ msgstr "The icon of the dialog."

#~ msgid "The title of the dialog."
#~ msgstr "The title of the dialog."

#~ msgid "The description of the dialog."
#~ msgstr "The description of the dialog."

#~ msgid "The type of the dialog."
#~ msgstr "The type of the dialog."

#~ msgid "The display type of the dialog."
#~ msgstr "The display type of the dialog."

#~ msgid "The activator type of the dialog."
#~ msgstr "The activator type of the dialog."

#~ msgid "Der Typ der Ansicht."
#~ msgstr "The type of the View."

#~ msgid "Der Typ des Dialogs."
#~ msgstr "The type of dialogue."

#~ msgid "A function to register a widget. It is used as a decorator."
#~ msgstr "A function to register a widget. It is used as a decorator."

#~ msgid ""
#~ "A widget is an element for displaying or editing a single item from the "
#~ "data."
#~ msgstr ""
#~ "A widget is an element for displaying or editing a single item from the "
#~ "data."

#~ msgid ""
#~ "The ID of the parent element. Only to be set if the widget is to be rendered"
#~ " in a dialog of another base."
#~ msgstr ""
#~ "The ID of the parent element. Only to be set if the widget is to be rendered"
#~ " in a dialog of another base."

#~ msgid "The icon of the widget."
#~ msgstr "The icon of the widget."

#~ msgid "The title of the widget."
#~ msgstr "The title of the widget."

#~ msgid "The description of the widget."
#~ msgstr "The description of the widget."

#~ msgid "The type of the widget."
#~ msgstr "The type of the widget."

#~ msgid "The layout of the widget."
#~ msgstr "The layout of the widget."

#~ msgid "The active fields of the widget."
#~ msgstr "The active fields of the widget."

#~ msgid "decore Base | Python GUI-Dashboard-Anwendung | Erste Schritte"
#~ msgstr "decore Base | Python GUI Dashboard Application | Get started"

#~ msgid "decore base python ui dashboard application"
#~ msgstr "decore base python ui dashboard application"

#~ msgid "Introduction"
#~ msgstr "Introduction"

#~ msgid "Contents:"
#~ msgstr "Contents:"

#~ msgid ""
#~ "**Darstellung im Frontend** - Die Ansicht wird in der Navigation unter der "
#~ "Basis gelistet. - Die Ansicht wird im Ansichtsbereich der Basis gerendert."
#~ msgstr ""
#~ "**Display in frontend** - The View is listed below the Base in the "
#~ "navigation. - The View is rendered in the View area of the Base."
